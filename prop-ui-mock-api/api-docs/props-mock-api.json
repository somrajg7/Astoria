{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Mock Property Service API",
    "description": "Mock API for testing property services."
  },
  "paths": {
    "/props": {
      "get": {
        "operationId": "SearchProps",
        "tags": [
          "props"
        ],
        "description": "Retrieve a list of properties.\n\nValid query strings are\n  * none - retrieve all properties\n  * distributionBrand - retrieve all properties within the given brand(s)\n  * country - retrieve properties by country\n  * country, distributionBrand - retrieve properties by country and brand(s)\n  * state, country - retrieve properties by state\n  * state, country, distributionBrand - retrieve properties by state and brand(s)\n  * city, state, country - retrieve properties by city\n  * city, state, country, distributionBrand - retrieve properties by city and brand(s)\n  * country, postalCode - retrieve properties by postal code\n  * country, postalCode, distributionBrand - retrieve properties by postal code and brand(s)\n  * latitude, longitude, radius, radiusUnits - retrieve properties within a radius\n  * latitude, longitude, radius, radiusUnits, distributionBrand - retrieve properties by brand(s) within a radius\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "city",
            "in": "query",
            "description": "Property city",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Property state",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "Property country",
            "required": false,
            "type": "string"
          },
          {
            "name": "postalCode",
            "in": "query",
            "description": "Property postal code",
            "required": false,
            "type": "string"
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "latitudinal center of a radius search",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "longitudinal center of a radius search",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "search radius",
            "required": false,
            "type": "integer"
          },
          {
            "name": "radiusUnits",
            "in": "query",
            "description": "search radius units (M)iles or (K)ilometers",
            "required": false,
            "type": "string",
            "enum": [
              "M",
              "K"
            ]
          },
          {
            "name": "distributionBrand",
            "in": "query",
            "description": "Filter by single or comma-delimited list of brands.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "Offset the list of returned results by this amount. Default is zero."
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Number of items to retrieve. Default is all."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Prop"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            }
          }
        }
      },
      "post": {
        "operationId": "CreateProp",
        "tags": [
          "props"
        ],
        "description": "Creates a property.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "prop",
            "in": "body",
            "description": "Property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Prop"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Returned on successful creation of a new resource. A link to the newly-created resouce will be contained in the 'Location' header."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            }
          },
          "409": {
            "description": "Resource already exists"
          }
        }
      }
    },
    "/props/config/acctctgtypes": {
      "get": {
        "tags": [
          "account",
          "accountCategory"
        ],
        "description": "Returns the account category types",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Acctctgtypes"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/accttypes": {
      "get": {
        "tags": [
          "accttypes"
        ],
        "description": "Returns the account types",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Accttypes"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/brandcodes": {
      "get": {
        "tags": [
          "brandcodes"
        ],
        "description": "Returns the list of brand codes",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Brandcodes"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/checkouttypes": {
      "get": {
        "tags": [
          "checkouttypes",
          "checkout types"
        ],
        "description": "Returns the list of checkout types",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Checkouttypes"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/chrgctgs": {
      "get": {
        "tags": [
          "chrgctgs"
        ],
        "description": "Returns the charge categories",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Chrgctgs"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/compcodes": {
      "get": {
        "tags": [
          "compcodes"
        ],
        "description": "Returns the list of comp codes",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Compcodes"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/entrytypes": {
      "get": {
        "tags": [
          "entrytypes"
        ],
        "description": "Returns the entry types",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Entrytypes"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/gueststatuses": {
      "get": {
        "tags": [
          "gueststatuses"
        ],
        "description": "Returns list of available guest statuses",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Gueststatuses"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/mops": {
      "get": {
        "tags": [
          "mops"
        ],
        "description": "Returns the means of payment",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Mops"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/noshowstatuses": {
      "get": {
        "tags": [
          "noshowstatuses"
        ],
        "description": "Returns list of noshow statuses",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Noshowstatuses"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/notificationtypes": {
      "get": {
        "tags": [
          "notificationtypes"
        ],
        "description": "Returns list of notification types",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Notificationtypes"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/rateplangroupdescs": {
      "get": {
        "tags": [
          "rateplangroupdescs"
        ],
        "description": "Returns the list of rate plan group descs",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Rateplangroupdescs"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/requestcodetypes": {
      "get": {
        "tags": [
          "requestcodetypes"
        ],
        "description": "Returns the list of request code types",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Requestcodetypes"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/roomcategories": {
      "get": {
        "tags": [
          "roomcategories"
        ],
        "description": "Returns list of available room categories",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Roomcategories"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/roomstates": {
      "get": {
        "tags": [
          "roomstates"
        ],
        "description": "Returns the list of room states",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Roomstates"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/roomstatuses": {
      "get": {
        "tags": [
          "roomstatuses"
        ],
        "description": "Returns list of room statuses",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Roomstatuses"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/satisfactiongtdcodes": {
      "get": {
        "tags": [
          "satisfactiongtdcodes"
        ],
        "description": "Returns the list of satisfaction guaranteed codes",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Satisfactiongtdcodes"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/satisfactiongtdctgs": {
      "get": {
        "tags": [
          "satisfactiongtdctgs"
        ],
        "description": "Returns the list of satisfaction guaranteed categories",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Satisfactiongtdctgs"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/staystatuses": {
      "get": {
        "tags": [
          "staystatuses"
        ],
        "description": "Returns list of stay statuses",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Staystatuses"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/traceowners": {
      "get": {
        "tags": [
          "traceowners"
        ],
        "description": "Returns the list of trace owners",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Traceowners"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/tracestatuses": {
      "get": {
        "tags": [
          "tracestatuses"
        ],
        "description": "Returns the list of trace statuses",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Tracestatuses"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/config/tracetypes": {
      "get": {
        "tags": [
          "tracetypes"
        ],
        "description": "Returns the list of trace types",
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Tracetypes"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/messages": {
      "get": {
        "tags": [
          "messages"
        ],
        "description": "Retrieves messages for the given itemId",
        "parameters": [
          {
            "name": "itemId",
            "in": "query",
            "description": "The itemId(s) describing which messages to retrieve",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Messages"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/props/{propCode}": {
      "parameters": [
        {
          "name": "propCode",
          "in": "path",
          "description": "Property Code",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "ReadProp",
        "tags": [
          "props"
        ],
        "description": "Retrieve a single property.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Prop"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "operationId": "UpdateProp",
        "tags": [
          "props"
        ],
        "description": "Updates a property.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "prop",
            "in": "body",
            "description": "Property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Prop"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/props/{propCode}/accounts": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        }
      ],
      "get": {
        "tags": [
          "accounts"
        ],
        "description": "Returns the list of accounts for a property",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Accounts"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "accounts",
          "account"
        ],
        "description": "Create new house account for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "account",
            "in": "body",
            "description": "New account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Returned on successful creation of a new resource. A link to the newly-created resouce will be contained in the 'Location' header."
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            }
          },
          "409": {
            "description": "Resource already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/props/{propCode}/accounts/{accountId}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "name": "accountId",
          "in": "path",
          "description": "The house account id",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ],
      "put": {
        "tags": [
          "accounts",
          "account"
        ],
        "description": "Updates the request codes for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "account",
            "in": "body",
            "description": "The updated account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "account",
          "accounts"
        ],
        "description": "Retrieves the details for the requested house account",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AccountDetail"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/props/{propCode}/accounts/{accountId}/folios": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/accountId"
        }
      ],
      "get": {
        "tags": [
          "folios",
          "accounts"
        ],
        "description": "Returns the list of folios for an account",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AccountFolios"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "folios",
          "accounts"
        ],
        "description": "Creates a Folio and attaches it to a new or existing Account Folios document",
        "parameters": [
          {
            "name": "folio",
            "in": "body",
            "description": "The new folio to add to the list of Account Folios.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountFolio"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/accounts/{accountId}/folios/{folioId}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/accountId"
        },
        {
          "$ref": "#/parameters/folioId"
        }
      ],
      "get": {
        "tags": [
          "folios",
          "accounts"
        ],
        "description": "Returns a specific account folio.",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AccountFolio"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "folios",
          "accounts"
        ],
        "description": "Updates an existing Folio",
        "parameters": [
          {
            "name": "folio",
            "in": "body",
            "description": "The folio to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountFolio"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/accounts/{accountId}/folios/{folioId}/receipts/{receiptId}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/accountId"
        },
        {
          "$ref": "#/parameters/folioId"
        },
        {
          "$ref": "#/parameters/receiptId"
        }
      ],
      "get": {
        "tags": [
          "receipts",
          "accounts"
        ],
        "description": "Returns a receipt from an account",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AccountReceipt"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/audit/accountslog/{date}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/date"
        }
      ],
      "get": {
        "tags": [
          "Accounts log"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AccountsLog"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/props/{propCode}/audit/batchchargeslog/{date}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/date"
        }
      ],
      "get": {
        "tags": [
          "Batchcharges log"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BatchchargesLog"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/props/{propCode}/audit/chargelog/{chargeId}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "name": "chargeId",
          "in": "path",
          "required": true,
          "type": "integer",
          "description": "The chargeId to retrieve the log for"
        }
      ],
      "get": {
        "tags": [
          "Charges log"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ChargeLog"
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/props/{propCode}/audit/configlog/{date}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/date"
        }
      ],
      "get": {
        "tags": [
          "audit"
        ],
        "description": "Retrieves the audit entries for the PMS application for a given property",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ConfigLog"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "$ref": "#/responses/400"
          },
          "404": {
            "description": "Not found",
            "$ref": "#/responses/404"
          },
          "500": {
            "description": "Internal Server Error",
            "$ref": "#/responses/500"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "$ref": "#/parameters/date"
          }
        ]
      }
    },
    "/props/{propCode}/config": {
      "get": {
        "tags": [
          "config"
        ],
        "description": "Retrieves the property configuration for the PMS application",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "The group id of one or more configuration groups",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/PmsConfig"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "config"
        ],
        "description": "Update a property's config",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "pmsconfig",
            "in": "body",
            "description": "The updated config",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PmsConfig"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "config"
        ],
        "description": "Create a new config",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "pmsconfig",
            "in": "body",
            "description": "The new config",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PmsConfig"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/accountfields": {
      "get": {
        "tags": [
          "accountfields"
        ],
        "description": "Retrieves the account fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Accountfields"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "accountfields"
        ],
        "description": "Updates the account fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "accountfields",
            "in": "body",
            "description": "The updated account fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Accountfields"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "accountfields"
        ],
        "description": "Creates account fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "accountfields",
            "in": "body",
            "description": "The new account fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Accountfields"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/acctctgs": {
      "get": {
        "tags": [
          "acctctgs",
          "accountCategory"
        ],
        "description": "Retrieves the accounting categories for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Acctctgs"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "acctctgs",
          "accountCategory"
        ],
        "description": "Update the accounting categories for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "acctctgs",
            "in": "body",
            "description": "The updated account categories",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Acctctgs"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "acctctgs",
          "accountCategory"
        ],
        "description": "Create accounting categories for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "acctctgs",
            "in": "body",
            "description": "The new accounting categories",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Acctctgs"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/groupfields": {
      "get": {
        "tags": [
          "groupfields"
        ],
        "description": "Returns a list and order of the group registration fields for certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Groupfields"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "groupfields"
        ],
        "description": "Updates the list and order of the group registration fields for certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "groupfields",
            "in": "body",
            "description": "The updated group registration fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Groupfields"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "groupfields"
        ],
        "description": "Creates a list and order of the group registration fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "groupfields",
            "in": "body",
            "description": "The new list and order of the group registration fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Groupfields"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/guaranteetypes": {
      "get": {
        "tags": [
          "guaranteetypes"
        ],
        "description": "Retrieves the guarantee types for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Guaranteetypes"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "guaranteetypes"
        ],
        "description": "Updates the guarantee types for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "guaranteetypes",
            "in": "body",
            "description": "The updated guarantee types",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Guaranteetypes"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "guaranteetypes"
        ],
        "description": "Creates guarantee types for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "guaranteetypes",
            "in": "body",
            "description": "The new guarantee types",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Guaranteetypes"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/guestfields": {
      "get": {
        "tags": [
          "guestfields"
        ],
        "description": "Retrieves the guest fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Guestfields"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "guestfields"
        ],
        "description": "Updates the guest fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "guestfields",
            "in": "body",
            "description": "The updated guest fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Guestfields"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "guestfields"
        ],
        "description": "Creates guest fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "guestfields",
            "in": "body",
            "description": "The new guest fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Guestfields"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/linkedprops": {
      "get": {
        "tags": [
          "linkedprops"
        ],
        "description": "Retrieves the property data",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/Linkedprops"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "linkedprops"
        ],
        "description": "Update the linkedprops for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "linkedprops",
            "in": "body",
            "description": "The updated linkedprops",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Linkedprops"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "linkedprops"
        ],
        "description": "Create linkedprops for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "linkedprops",
            "in": "body",
            "description": "The new linkedprops",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Linkedprops"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/locales": {
      "get": {
        "tags": [
          "locales"
        ],
        "description": "Returns the supported locales",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Locales"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "locales"
        ],
        "description": "Updates the locales for certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "locales",
            "in": "body",
            "description": "The updated locales",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Locales"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "locales"
        ],
        "description": "Creates locales for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "locales",
            "in": "body",
            "description": "The new locales",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Locales"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/notifications": {
      "get": {
        "tags": [
          "notifications"
        ],
        "description": "Returns list of notifications",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "notifications"
        ],
        "description": "Updates the notifications for certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "notifications",
            "in": "body",
            "description": "The updated notifications",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "notifications"
        ],
        "description": "Creates notifications for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "notifications",
            "in": "body",
            "description": "The new notifications",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/rateplangroups": {
      "get": {
        "tags": [
          "rateplangroups"
        ],
        "description": "Retrieves the rate plan groups for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Rateplangroups"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "rateplangroups"
        ],
        "description": "Update the rate plan groups for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "rateplangroup",
            "in": "body",
            "description": "The updated rate plan groups",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rateplangroups"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "rateplangroups"
        ],
        "description": "Create rate plan groups for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "rateplangroup",
            "in": "body",
            "description": "The new rate plan groups",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rateplangroups"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/regcardfields": {
      "get": {
        "tags": [
          "regcardfields"
        ],
        "description": "Retrieves the registration card fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Regcardfields"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "regcardfields"
        ],
        "description": "Updates the registration card fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "regcardfields",
            "in": "body",
            "description": "The updated registration card fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Regcardfields"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "regcardfields"
        ],
        "description": "Creates registration card fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "regcardfields",
            "in": "body",
            "description": "The new registration card fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Regcardfields"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/registrationfields": {
      "get": {
        "tags": [
          "registrationfields"
        ],
        "description": "Retrieves the registrationfields for the property specified by propCode",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Registrationfields"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "registrationfields"
        ],
        "description": "Updates the registrationfields for certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "registrationfields",
            "in": "body",
            "description": "The updated registrationfields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registrationfields"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "registrationfields"
        ],
        "description": "Creates registrationfields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "registrationfields",
            "in": "body",
            "description": "The new registrationfields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registrationfields"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/reportfields": {
      "get": {
        "tags": [
          "reportfields"
        ],
        "description": "Retrieves the report fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Reportfields"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "reportfields"
        ],
        "description": "Updates the report fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "reportfields",
            "in": "body",
            "description": "The updated report fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reportfields"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "reportfields"
        ],
        "description": "Creates report fields for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "reportfields",
            "in": "body",
            "description": "The new report fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reportfields"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/requestcodes": {
      "get": {
        "tags": [
          "requestcodes",
          "request codes"
        ],
        "description": "Retrieves the request codes for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Requestcodes"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "requestcodes",
          "request codes"
        ],
        "description": "Updates the request codes for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "requestcodes",
            "in": "body",
            "description": "The updated request codes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Requestcodes"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "requestcodes",
          "request codes"
        ],
        "description": "Creates request codes for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "requestcodes",
            "in": "body",
            "description": "The new request codes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Requestcodes"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/config/voucherreasons": {
      "get": {
        "tags": [
          "voucherreasons"
        ],
        "description": "Retrieves the voucher reasons for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Voucherreasons"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "voucherreasons"
        ],
        "description": "Updates the voucher reasons for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "voucherreasons",
            "in": "body",
            "description": "The updated voucher reasons",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Voucherreasons"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "voucherreasons"
        ],
        "description": "Creates voucher reasons for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "voucherreasons",
            "in": "body",
            "description": "The new voucher reasons",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Voucherreasons"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/groups/{groupId}/folios": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/groupId"
        }
      ],
      "get": {
        "tags": [
          "folios",
          "groups"
        ],
        "description": "Returns the list of folios for a group",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GroupFolios"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "folios",
          "groups"
        ],
        "description": "Creates a Folio and attaches it to a new or existing Group Folios document",
        "parameters": [
          {
            "name": "folio",
            "in": "body",
            "description": "The new folio to add to the list of Group Folios.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupFolio"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/groups/{groupId}/folios/{folioId}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/groupId"
        },
        {
          "$ref": "#/parameters/folioId"
        }
      ],
      "get": {
        "tags": [
          "folios",
          "groups"
        ],
        "description": "Returns a specific group folio.",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GroupFolio"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "folios",
          "groups"
        ],
        "description": "Updates an existing Folio",
        "parameters": [
          {
            "name": "folio",
            "in": "body",
            "description": "The folio to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupFolio"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/groups/{groupId}/folios/{folioId}/receipts/{receiptId}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/groupId"
        },
        {
          "$ref": "#/parameters/folioId"
        },
        {
          "$ref": "#/parameters/receiptId"
        }
      ],
      "get": {
        "tags": [
          "receipts",
          "groups"
        ],
        "description": "Returns a receipt from a group",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GroupReceipt"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/postingcodes": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        }
      ],
      "get": {
        "tags": [
          "postingcodes"
        ],
        "description": "Returns the list of posting codes for a given property",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/PostingCodes"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "postingcodes"
        ],
        "description": "Updates the list of posting codes for a given property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "postingcodes",
            "in": "body",
            "description": "The updated posting codes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostingCodes"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "postingcodes"
        ],
        "description": "Creates posting codes for a certain property",
        "parameters": [
          {
            "$ref": "#/parameters/propCode"
          },
          {
            "name": "postingcodes",
            "in": "body",
            "description": "The new posting codes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostingCodes"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "409": {
            "$ref": "#/responses/409"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/stays/{stayId}/folios": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/stayId"
        }
      ],
      "get": {
        "tags": [
          "folios",
          "stays"
        ],
        "description": "Returns the list of folios for a stay",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/StayFolios"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "folios",
          "stays"
        ],
        "description": "Creates a Folio and attaches it to a new or existing Stay Folios document",
        "parameters": [
          {
            "name": "folio",
            "in": "body",
            "description": "The new folio to add to the list of Stay Folios.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StayFolio"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/stays/{stayId}/folios/{folioId}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/stayId"
        },
        {
          "$ref": "#/parameters/folioId"
        }
      ],
      "get": {
        "tags": [
          "folios",
          "stays"
        ],
        "description": "Returns a specific stay folio.",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/StayFolio"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "put": {
        "tags": [
          "folios",
          "stays"
        ],
        "description": "Updates an existing Folio",
        "parameters": [
          {
            "name": "folio",
            "in": "body",
            "description": "The folio to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StayFolio"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/204"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/stays/{stayId}/folios/{folioId}/receipts": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/stayId"
        },
        {
          "$ref": "#/parameters/folioId"
        }
      ],
      "post": {
        "tags": [
          "receipts",
          "stays"
        ],
        "description": "Creates a receipt and adds it to a stay folio",
        "parameters": [
          {
            "name": "receipt",
            "in": "body",
            "description": "The new receipt to add to the stay folio",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewFolioReceipt"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/201"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/props/{propCode}/stays/{stayId}/folios/{folioId}/receipts/{receiptId}": {
      "parameters": [
        {
          "$ref": "#/parameters/propCode"
        },
        {
          "$ref": "#/parameters/stayId"
        },
        {
          "$ref": "#/parameters/folioId"
        },
        {
          "$ref": "#/parameters/receiptId"
        }
      ],
      "get": {
        "tags": [
          "receipts",
          "stays"
        ],
        "description": "Returns a receipt from a stay",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/StayReceipt"
            }
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "required": [
        "accountName",
        "activeFlag",
        "editableFlag",
        "temporaryFlag",
        "visibleFlag"
      ],
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The account name"
        },
        "activeFlag": {
          "type": "boolean",
          "description": "Indicates whether this account is active or not"
        },
        "editableFlag": {
          "type": "boolean",
          "description": "Indicates whether this account is editable or not"
        },
        "temporaryFlag": {
          "type": "boolean",
          "description": "Indicates whether this account is temporary or not"
        },
        "visibleFlag": {
          "type": "boolean",
          "description": "Indicates whether this account is visible or not"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "closeAccountReminder": {
          "type": "string",
          "description": "The close account reminder"
        },
        "closeDate": {
          "type": "string",
          "format": "date",
          "description": "The account close date"
        },
        "companyName": {
          "type": "string",
          "description": "The account company name"
        },
        "contactName": {
          "type": "string",
          "description": "The account contact name"
        },
        "corporateProfileId": {
          "type": "string",
          "description": "The account corporate profile id"
        },
        "currencyCode": {
          "type": "string",
          "description": "The account country code"
        },
        "faxNum": {
          "type": "string",
          "description": "The account fax num"
        },
        "openDate": {
          "type": "string",
          "format": "date",
          "description": "The account open date"
        },
        "phoneNum": {
          "type": "string",
          "description": "The account phone number"
        },
        "printLanguageId": {
          "type": "boolean",
          "description": "The account print language id"
        },
        "remark": {
          "type": "string",
          "description": "The account remark"
        }
      }
    },
    "AccountConfig": {
      "properties": {
        "autoSubgroupGenerationFlag": {
          "type": "boolean"
        },
        "callRateExceptHouseAcctId": {
          "type": "integer",
          "format": "int32"
        },
        "cityLedgerHouseAcctId": {
          "type": "integer",
          "format": "int32"
        },
        "collectVisitorInfoFlag": {
          "type": "boolean"
        },
        "ctCompNameReqFlag": {
          "type": "boolean"
        },
        "foodAndBevExcHouseAcctId": {
          "type": "integer",
          "format": "int32"
        },
        "foodAndBevHouseAcctId": {
          "type": "integer",
          "format": "int32"
        },
        "getRegionalGuestDataFlag": {
          "type": "boolean"
        },
        "getRegionalGuestDataForAllFlag": {
          "type": "boolean"
        },
        "groupHeaderUrl": {
          "type": "string"
        },
        "includeCompInOccFlag": {
          "type": "boolean"
        },
        "localMarketRequiredFlag": {
          "type": "boolean"
        },
        "miscExceptHouseAcctId": {
          "type": "integer",
          "format": "int32"
        },
        "nonguestPostingHouseAcctId": {
          "type": "integer",
          "format": "int32"
        },
        "pendingBankDepHouseAcctId": {
          "type": "integer",
          "format": "int32"
        },
        "phoneNumberRequiredFlag": {
          "type": "boolean"
        },
        "requirGrpmembrSrpMatchFlag": {
          "type": "boolean"
        },
        "useGroupHeaderFlag": {
          "type": "boolean"
        },
        "useSubGroupsFlag": {
          "type": "boolean"
        }
      }
    },
    "AccountDetail": {
      "required": [
        "accountId",
        "propCode"
      ],
      "type": "object",
      "properties": {
        "accountId": {
          "type": "integer",
          "description": "The account id"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "closeAccountReminder": {
          "type": "string",
          "description": "The close account reminder"
        },
        "closeDate": {
          "type": "string",
          "format": "date",
          "description": "The account close date"
        },
        "companyName": {
          "type": "string",
          "description": "The account company name"
        },
        "contactName": {
          "type": "string",
          "description": "The account contact name"
        },
        "corporateProfileId": {
          "type": "string",
          "description": "The account corporate profile id"
        },
        "currencyCode": {
          "type": "string",
          "description": "The account country code"
        },
        "faxNum": {
          "type": "string",
          "description": "The account fax num"
        },
        "openDate": {
          "type": "string",
          "format": "date",
          "description": "The account open date"
        },
        "phoneNum": {
          "type": "string",
          "description": "The account phone number"
        },
        "printLanguageId": {
          "type": "boolean",
          "description": "The account print language id"
        },
        "propCode": {
          "type": "string",
          "description": "The account propcode"
        },
        "remark": {
          "type": "string",
          "description": "The account remark"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always “accountdetail”"
        }
      }
    },
    "AccountFolio": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Folio"
        }
      ]
    },
    "AccountFolios": {
      "properties": {
        "accountId": {
          "type": "integer",
          "format": "int32",
          "description": "The id of the account to which these folios belong. Only populated for account folios"
        },
        "propCode": {
          "type": "string",
          "description": "The prop code of the property to which these folios belong"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always \"folios\""
        },
        "folios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountFolio"
          }
        }
      }
    },
    "AccountReceipt": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Receipt"
        },
        {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "integer",
              "description": "The id of an account to which these receipts belong"
            }
          }
        }
      ]
    },
    "AccountSummary": {
      "properties": {
        "accountId": {
          "type": "integer",
          "description": "The account id"
        },
        "accountName": {
          "type": "string",
          "description": "The account name"
        },
        "activeFlag": {
          "type": "boolean",
          "description": "Indicates whether this account is active or not"
        },
        "editableFlag": {
          "type": "boolean",
          "description": "Indicates whether this account is editable or not"
        },
        "temporaryFlag": {
          "type": "boolean",
          "description": "Indicates whether this account is temporary or not"
        },
        "visibleFlag": {
          "type": "boolean",
          "description": "Indicates whether this account is visible or not"
        }
      }
    },
    "Accountfields": {
      "required": [
        "itemId",
        "propCode",
        "type"
      ],
      "properties": {
        "itemId": {
          "type": "string",
          "pattern": "accountfields",
          "description": "The item id for account fields. Always \"accountfields\""
        },
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code of the account fields"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of this document. Always \"conf\""
        },
        "accountfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegDisplayField"
          }
        }
      }
    },
    "Accounts": {
      "properties": {
        "propCode": {
          "type": "string",
          "description": "The property code"
        },
        "type": {
          "type": "string",
          "description": "The document type. Always “accounts”"
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountSummary"
          }
        }
      }
    },
    "AccountsLog": {
      "properties": {
        "propCode": {
          "type": "string",
          "description": "The property this document pertains to"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always “audit”."
        },
        "itemId": {
          "type": "string",
          "description": "The itemId for this document."
        },
        "date": {
          "type": "string",
          "description": "The date for this log"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountsLogEntry"
          },
          "description": "The list of configuration log entries"
        }
      }
    },
    "AccountsLogEntry": {
      "properties": {
        "docId": {
          "type": "string",
          "description": "The document id of the document that has been created, modified or deleted"
        },
        "action": {
          "type": "string",
          "description": "The action taken on the document ( CREATE, UPDATE, or DELETE )"
        },
        "userId": {
          "type": "string",
          "description": "The user who modified the document"
        },
        "log": {
          "type": "string",
          "description": "Information about what occurred"
        },
        "timestamp": {
          "type": "string",
          "description": "The timestamp of when the change was made"
        },
        "accountId": {
          "type": "integer",
          "description": "The account Id"
        }
      }
    },
    "AccountsReceivableConfig": {
      "properties": {
        "aReInvoice": {
          "type": "boolean"
        },
        "activePurgeMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "allowArChargePosting": {
          "type": "boolean"
        },
        "arKeepOrigTransferDateFlag": {
          "type": "boolean"
        },
        "autoPurgeFlag": {
          "type": "boolean"
        },
        "autoSettleArAccountBalancesFlag": {
          "type": "boolean"
        },
        "bankPaymentFormTaxPct": {
          "type": "integer",
          "format": "int32"
        },
        "city": {
          "type": "string"
        },
        "clerkFirstname": {
          "type": "string"
        },
        "clerkLastname": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "createInvoiceForBillingFlag": {
          "type": "boolean"
        },
        "creditAmountsAgedFlag": {
          "type": "boolean"
        },
        "daysBeforePurge": {
          "type": "integer",
          "format": "int32"
        },
        "daysToKeepPurgeHistory": {
          "type": "integer",
          "format": "int32"
        },
        "daysToWaitBeforePurgingAr": {
          "type": "integer",
          "format": "int32"
        },
        "dbRefundAcctId": {
          "type": "integer",
          "format": "int32"
        },
        "faxNum": {
          "type": "string"
        },
        "firstCycleId": {
          "type": "integer",
          "format": "int32"
        },
        "nextCycleId": {
          "type": "integer",
          "format": "int32"
        },
        "numInvoicesPrinted": {
          "type": "integer",
          "format": "int32"
        },
        "phoneNum": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "prePrintedFormsFlag": {
          "type": "boolean"
        },
        "preprintFormForInvoiceFlag": {
          "type": "boolean"
        },
        "printStatementComments": {
          "type": "boolean"
        },
        "purgeCreditWaitDays": {
          "type": "integer",
          "format": "int32"
        },
        "purgeReceiptCount": {
          "type": "integer",
          "format": "int32"
        },
        "purgeWarnDaysCount": {
          "type": "integer",
          "format": "int32"
        },
        "purgeWarnTransCount": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "type": "string"
        },
        "suppressArInvLegalReqFlag": {
          "type": "boolean"
        },
        "trunTrxnDescFlag": {
          "type": "boolean"
        },
        "useARSubcodesFlag": {
          "type": "boolean"
        },
        "useInfoReceiptForArInvoiceFlag": {
          "type": "boolean"
        },
        "useOracleArExtractFlag": {
          "type": "boolean"
        },
        "useOracleCcExtractFlag": {
          "type": "boolean"
        },
        "usesBankPaymentFormFlag": {
          "type": "boolean"
        },
        "worksetTransCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Acctctg": {
      "required": [
        "acctCategoryId",
        "acctCategoryType",
        "acctCategoryDesc",
        "acctType"
      ],
      "properties": {
        "acctCategoryDesc": {
          "type": "string",
          "description": "The accounting category description"
        },
        "acctCategoryId": {
          "type": "string",
          "maxLength": 2,
          "description": "The accounting category id"
        },
        "acctCategoryType": {
          "type": "string",
          "description": "The accounting category type"
        },
        "acctType": {
          "type": "string",
          "description": "The accounting type"
        },
        "chargeType": {
          "type": "string",
          "description": "The charge type"
        }
      }
    },
    "Acctctgs": {
      "required": [
        "propCode",
        "itemId",
        "locale",
        "type"
      ],
      "properties": {
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code for these Account Categories"
        },
        "itemId": {
          "type": "string",
          "pattern": "acctctgs",
          "description": "The item id of the acctctgs"
        },
        "locale": {
          "type": "string",
          "description": "The locale of the acctctgs"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of the acctctgs"
        },
        "acctctgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Acctctg"
          }
        }
      }
    },
    "Acctctgtype": {
      "properties": {
        "accountingType": {
          "type": "string",
          "description": "The account type"
        },
        "acctCategoryType": {
          "type": "string",
          "description": "The type of this account category"
        },
        "acctCategoryTypeDesc": {
          "type": "string",
          "description": "The description of this account category type"
        }
      }
    },
    "Acctctgtypes": {
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The item id of the account category"
        },
        "locale": {
          "type": "string",
          "description": "The locale of the account category"
        },
        "type": {
          "type": "string",
          "description": "The type of the account category"
        },
        "acctctgtypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Acctctgtype"
          }
        }
      }
    },
    "Accttype": {
      "properties": {
        "acctDesc": {
          "type": "string",
          "description": "The account type description"
        },
        "acctType": {
          "type": "string",
          "description": "The type of this account"
        }
      }
    },
    "Accttypes": {
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The id of the item"
        },
        "locale": {
          "type": "string",
          "description": "The locale of these account types"
        },
        "type": {
          "type": "string",
          "description": "The type of these account types"
        },
        "accttypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Accttype"
          }
        }
      }
    },
    "Address": {
      "properties": {
        "addressLine1": {
          "type": "string",
          "description": "address line 1"
        },
        "addressLine2": {
          "type": "string",
          "description": "address line 2"
        },
        "city": {
          "type": "string",
          "description": "The city"
        },
        "countryCode": {
          "type": "string",
          "description": "The country code"
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code"
        },
        "stateCode": {
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "^[A-Z]{2}$",
          "description": "The two-character state code"
        }
      }
    },
    "AdminConfig": {
      "properties": {
        "allowStopChargeOverrideFlag": {
          "type": "boolean"
        },
        "barEnableLiquorChkinFlag": {
          "type": "boolean"
        },
        "changeRateLevelToLv0ForLinkdownFlag": {
          "type": "boolean"
        },
        "delphiExtractUrl": {
          "type": "string"
        },
        "delphiIncludeCompRooms": {
          "type": "integer",
          "format": "int32"
        },
        "delphiIncludeTransientSales": {
          "type": "integer",
          "format": "int32"
        },
        "delphiPropertyId": {
          "type": "string"
        },
        "hilstarBatchMaxTxns": {
          "type": "integer",
          "format": "int32"
        },
        "hotelTaxNumberOther": {
          "type": "string"
        },
        "italyThresholdRevAmt": {
          "type": "integer",
          "format": "int32"
        },
        "keyExpirationTime": {
          "type": "integer",
          "format": "int32"
        },
        "keyExpiryAdditionalDays": {
          "type": "integer",
          "format": "int32"
        },
        "keysPerAdult": {
          "type": "integer",
          "format": "int32"
        },
        "legalEntityCity": {
          "type": "string"
        },
        "legalEntityName": {
          "type": "string"
        },
        "legalEntityProvince": {
          "type": "string"
        },
        "minKeysPerRoom": {
          "type": "integer",
          "format": "int32"
        },
        "peoplesoftGlAccountsFlag": {
          "type": "boolean"
        },
        "policeExtractHotelCode": {
          "type": "string",
          "description": "??? string assumed"
        },
        "posCashPostMode": {
          "type": "string"
        },
        "postTipsSeparatelyFlag": {
          "type": "boolean"
        },
        "postToCheckedOutGuestsFlag": {
          "type": "boolean"
        },
        "recordLimit": {
          "type": "integer",
          "format": "int32"
        },
        "revtransSystemCode": {
          "type": "string"
        },
        "sendCheckoutsToKeyEncoder": {
          "type": "boolean"
        },
        "sendGuestMsgToInternetFlag": {
          "type": "boolean"
        },
        "sendGuestMsgToPhoneFlag": {
          "type": "boolean"
        },
        "sendGuestMsgToVideoFlag": {
          "type": "boolean"
        },
        "standaloneFlag": {
          "type": "boolean"
        },
        "useCrmTvMsgFlag": {
          "type": "boolean"
        },
        "useInvoiceExtractFlag": {
          "type": "boolean"
        },
        "useRevenueExtractIncVatFlag": {
          "type": "boolean"
        },
        "useSecureProtocolForDelphi": {
          "type": "boolean"
        }
      }
    },
    "AuditLog": {
      "properties": {
        "propCode": {
          "type": "string",
          "description": "The property this document pertains to"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always “audit”."
        },
        "itemId": {
          "type": "string",
          "description": "The itemId for this document."
        },
        "date": {
          "type": "string",
          "description": "The date for this log"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditLogEntry"
          },
          "description": "The list of configuration log entries"
        }
      }
    },
    "AuditLogEntry": {
      "properties": {
        "docId": {
          "type": "string",
          "description": "The document id of the document that has been created, modified or deleted"
        },
        "action": {
          "type": "string",
          "description": "The action taken on the document ( CREATE, UPDATE, or DELETE )"
        },
        "userId": {
          "type": "string",
          "description": "The user who modified the document"
        },
        "log": {
          "type": "string",
          "description": "Information about what occurred"
        },
        "timestamp": {
          "type": "string",
          "description": "The timestamp of when the change was made"
        }
      }
    },
    "BatchchargesLog": {
      "properties": {
        "date": {
          "type": "string",
          "description": "The batchcharges posting date"
        },
        "itemId": {
          "type": "string",
          "description": "The itemId for this document. Always \"batchcharges\""
        },
        "propCode": {
          "type": "string",
          "description": "The property this document pertains to"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always “audit”"
        },
        "entries": {
          "type": "array",
          "description": "The list of configuration log entries",
          "items": {
            "$ref": "#/definitions/BatchchargesLogEntry"
          }
        }
      }
    },
    "BatchchargesLogCharge": {
      "properties": {
        "accountId": {
          "type": "integer",
          "description": "The accountId of this charge"
        },
        "chargeId": {
          "type": "integer",
          "description": "The chargeId of the batch",
          "format": "int64"
        },
        "folioId": {
          "type": "integer",
          "description": "The folioId of this charge"
        },
        "groupId": {
          "type": "integer",
          "description": "The groupid of this charge"
        },
        "receiptId": {
          "type": "integer",
          "description": "The receiptId of this charge"
        },
        "stayId": {
          "type": "integer",
          "description": "The stayId of this charge",
          "format": "int64"
        }
      }
    },
    "BatchchargesLogEntry": {
      "properties": {
        "batchId": {
          "type": "integer",
          "description": "The batchId of the entry"
        },
        "ccPaymentFlag": {
          "type": "boolean",
          "description": "Indicates if credit card payment is active"
        },
        "ccPaymentSummary": {
          "type": "boolean",
          "description": "Indicates if credit card payment summary is active"
        },
        "chargeDueOutsOnlyFlag": {
          "type": "boolean",
          "description": "Indicates if charge due outs are active"
        },
        "comment": {
          "type": "string",
          "description": "The batch description"
        },
        "groupId": {
          "type": "integer",
          "description": "The groupId for the entry"
        },
        "includeDayUseFlag": {
          "type": "boolean",
          "description": "Indicates if include day use is active"
        },
        "includeDueOutsFlag": {
          "type": "boolean",
          "description": "Indicates if include due out is active"
        },
        "inhouseGuestFlag": {
          "type": "boolean",
          "description": "Indicates if inhouse guest is active"
        },
        "oneChargePerGuestFlag": {
          "type": "boolean",
          "description": "Indicates if one charge per guest is active"
        },
        "oneChargePerRoomFlag": {
          "type": "boolean",
          "description": "Indicates if one charge per room is active"
        },
        "postingUserId": {
          "type": "string",
          "description": "The posting user Id"
        },
        "reversingDate": {
          "type": "string",
          "description": "The reversing date"
        },
        "reversingFlag": {
          "type": "boolean",
          "description": "Indicates if the reversing is active"
        },
        "reversingReason": {
          "type": "string",
          "description": "The reason for reversing"
        },
        "reversingUserId": {
          "type": "string",
          "description": "The user Id who reversed"
        },
        "timestamp": {
          "type": "string",
          "description": "The timestamp of the batch"
        },
        "charges": {
          "type": "array",
          "description": "The charges for this batch entry",
          "items": {
            "$ref": "#/definitions/BatchchargesLogCharge"
          }
        }
      }
    },
    "Brandcode": {
      "properties": {
        "brandCd": {
          "type": "string",
          "description": "The brand code"
        },
        "brandDesc": {
          "type": "string",
          "description": "The brand description"
        },
        "subBrandCd": {
          "type": "string",
          "description": "The sub brand code"
        },
        "subBrandDesc": {
          "type": "string",
          "description": "The sub brand description"
        }
      }
    },
    "Brandcodes": {
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The item ID of this document. Always \"brandcodes\""
        },
        "locale": {
          "type": "string",
          "description": "Indicates the language of the brand code descriptions"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always \"conf\""
        },
        "brandcodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Brandcode"
          }
        }
      }
    },
    "Charge": {
      "properties": {
        "advatOriginalTransId": {
          "type": "integer",
          "description": "The advance value added tax original transaction id"
        },
        "arPaymentGroupId": {
          "type": "integer",
          "description": "The accounts receivable payment group id"
        },
        "arResetTransferDate": {
          "type": "string",
          "description": "The accounts receivable reset transfer date"
        },
        "arTransferDate": {
          "type": "string",
          "description": "The accounts receivable transfer date"
        },
        "azrFlag": {
          "type": "boolean",
          "description": "The \"After 'Z' reading\" flag"
        },
        "batchChargeId": {
          "type": "integer",
          "description": "The batch charge id"
        },
        "batchChargeReverseDate": {
          "type": "string",
          "description": "The batch charge reverse date"
        },
        "ccMasterAcctId": {
          "type": "integer",
          "description": "The credit card master account id"
        },
        "chargeId": {
          "type": "integer",
          "format": "int64",
          "description": "The charge id"
        },
        "created": {
          "type": "string",
          "description": "The created date of the charge"
        },
        "creditCardExpDate": {
          "type": "string",
          "description": "The credit card expiration date"
        },
        "creditCardId": {
          "type": "string",
          "description": "The credit card id"
        },
        "directBillAcctId": {
          "type": "integer",
          "description": "The direct bill account id"
        },
        "excludeFromOccupancyFlag": {
          "type": "boolean",
          "description": "The exclude from occupancy flag"
        },
        "fdSettlementTransId": {
          "type": "integer",
          "description": "The front desk settlement transaction id"
        },
        "invoiceId": {
          "type": "integer",
          "description": "The invoice id"
        },
        "invoiceRefTransId": {
          "type": "integer",
          "description": "The invoice reference transaction id"
        },
        "localMarketId": {
          "type": "integer",
          "description": "The local market id"
        },
        "mopType": {
          "type": "string",
          "description": "The means of payment type"
        },
        "originalARFolioId": {
          "type": "integer",
          "description": "The original accounts receivable folio id"
        },
        "originalARReceiptId": {
          "type": "integer",
          "description": "The original accounts receivable receipt id"
        },
        "originalFolioId": {
          "type": "integer",
          "description": "The original folio id"
        },
        "originalReceiptId": {
          "type": "integer",
          "description": "The original receipt id"
        },
        "originalStayId": {
          "type": "integer",
          "format": "int64",
          "description": "The orignial stay id"
        },
        "originalTransDatetime": {
          "type": "string",
          "description": "The original transaction date time"
        },
        "packageId": {
          "type": "integer",
          "description": "The package id"
        },
        "packageDate": {
          "type": "string",
          "description": "The package date"
        },
        "primaryTransId": {
          "type": "integer",
          "description": "The primary transaction id"
        },
        "transDesc": {
          "type": "string",
          "description": "The transaction description"
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        },
        "travelReasonCode": {
          "type": "string",
          "description": "The travel reason code"
        },
        "voucherAcctId": {
          "type": "integer",
          "description": "The voucher account id"
        }
      }
    },
    "ChargeCategory": {
      "properties": {
        "chargeCategoryCode": {
          "type": "string",
          "description": "The charge category code"
        },
        "secondaryTxnFolioId": {
          "type": "integer",
          "format": "int32",
          "description": "The secondary transaction folio id"
        },
        "secondaryTxnReceiptId": {
          "type": "integer",
          "format": "int32",
          "description": "The secondary transaction receipt id"
        },
        "splitAmount": {
          "type": "number",
          "format": "double",
          "description": "The split amount"
        }
      }
    },
    "ChargeFlowLog": {
      "properties": {
        "entryId": {
          "type": "integer",
          "description": "The Id of this entry"
        },
        "entryType": {
          "type": "string",
          "description": "The type of this entry"
        },
        "folioId": {
          "type": "integer",
          "description": "The folioId of this entry"
        },
        "groupId": {
          "type": "integer",
          "format": "int32",
          "description": "The groupId of this entry"
        },
        "stayId": {
          "type": "integer",
          "format": "int64",
          "description": "The stayId of this entry"
        },
        "accountId": {
          "type": "integer",
          "format": "int32",
          "description": "The house account Id of this entry"
        },
        "receiptId": {
          "type": "integer",
          "description": "The receipt Id of this entry"
        }
      }
    },
    "ChargeLog": {
      "properties": {
        "chargeId": {
          "type": "integer",
          "format": "int64",
          "description": "The chargeId for this document"
        },
        "itemId": {
          "type": "string",
          "description": "The itemId for this document. Always \"charge\""
        },
        "propCode": {
          "type": "string",
          "description": "The property this document pertains to"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always \"audit\""
        },
        "entries": {
          "type": "array",
          "description": "The list of configuration log entries",
          "items": {
            "$ref": "#/definitions/ChargeLogEntry"
          }
        }
      }
    },
    "ChargeLogEntry": {
      "properties": {
        "amount": {
          "type": "number",
          "format": "double",
          "description": "The amount of this charge"
        },
        "chargeType": {
          "type": "string",
          "description": "The type of this charge"
        },
        "comment": {
          "type": "string",
          "description": "The comment for this charge"
        },
        "currencyCode": {
          "type": "string",
          "description": "The currency code"
        },
        "postingCode": {
          "type": "string",
          "description": "The posting code"
        },
        "state": {
          "type": "string",
          "description": "The state of this charge"
        },
        "userId": {
          "type": "string",
          "description": "The Id of the user"
        },
        "timestamp": {
          "type": "string",
          "description": "The timestamp of the charge"
        },
        "from": {
          "$ref": "#/definitions/ChargeFlowLog"
        },
        "to": {
          "$ref": "#/definitions/ChargeFlowLog"
        }
      }
    },
    "Checkouttype": {
      "properties": {
        "typeId": {
          "type": "string",
          "description": "The checkout type id"
        },
        "typeDesc": {
          "type": "string",
          "description": "The checkout type description"
        }
      }
    },
    "Checkouttypes": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the checkout types"
        },
        "type": {
          "type": "string",
          "description": "The type of the checkout types"
        },
        "itemId": {
          "type": "string",
          "description": "The item id of the checkout types"
        },
        "checkouttypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checkouttype"
          }
        }
      }
    },
    "Chrgctg": {
      "properties": {
        "chargeType": {
          "type": "string",
          "description": "The type of the charge"
        },
        "visibleFlag": {
          "type": "boolean",
          "description": "The visible flag"
        },
        "chargeCategoryDesc": {
          "type": "string",
          "description": "The charge category description"
        },
        "packageFlag": {
          "type": "boolean",
          "description": "The package flag"
        }
      }
    },
    "Chrgctgs": {
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The item id of the chrgctgs"
        },
        "locale": {
          "type": "string",
          "description": "The locale of the chrgctgs"
        },
        "type": {
          "type": "string",
          "description": "The type of the chrgctgs"
        },
        "chrgctgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chrgctg"
          }
        }
      }
    },
    "Compcode": {
      "properties": {
        "codeId": {
          "type": "string",
          "description": "The id of the comp code"
        },
        "codeDesc": {
          "type": "string",
          "description": "The description of the comp code"
        }
      }
    },
    "Compcodes": {
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The item id of the comp codes"
        },
        "locale": {
          "type": "string",
          "description": "The locale of the comp codes"
        },
        "type": {
          "type": "string",
          "description": "The type of the comp codes"
        },
        "compcodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Compcode"
          }
        }
      }
    },
    "ConfigLog": {
      "required": [
        "propCode"
      ],
      "properties": {
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code associated to the document"
        },
        "type": {
          "type": "string",
          "description": "type of the document"
        },
        "itemId": {
          "type": "string",
          "description": "The item identifier of the document"
        },
        "date": {
          "type": "string",
          "description": "The date the document is created"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigLogEntry"
          },
          "description": "The list of configuration log entries"
        }
      }
    },
    "ConfigLogEntry": {
      "properties": {
        "docId": {
          "type": "string",
          "description": "The document id of the document"
        },
        "action": {
          "type": "string",
          "description": "The action taken on the document ( CREATE, UPDATE, or DELETE )"
        },
        "user": {
          "type": "string",
          "description": "The user who modified the document"
        },
        "log": {
          "type": "string",
          "description": "The type of change and groups that have been modified"
        },
        "timeStamp": {
          "type": "string",
          "description": "The timestamp of when the change was made"
        }
      }
    },
    "CreditCard": {
      "properties": {
        "holderName": {
          "type": "string",
          "description": "The name on the credit card"
        },
        "id": {
          "type": "string",
          "description": "The id of the credit card"
        }
      }
    },
    "Entrytype": {
      "properties": {
        "entryDesc": {
          "type": "string",
          "description": "The entry type description"
        },
        "entryType": {
          "type": "string",
          "description": "The type of this entry"
        }
      }
    },
    "Entrytypes": {
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The id of the item"
        },
        "locale": {
          "type": "string",
          "description": "The locale of these entry types"
        },
        "type": {
          "type": "string",
          "description": "The type of these entry types"
        },
        "entrytypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entrytype"
          }
        }
      }
    },
    "ErrorDetail": {
      "required": [
        "context",
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "context": {
          "type": "string"
        },
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorNotification"
          }
        }
      }
    },
    "ErrorNotification": {
      "required": [
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Folio": {
      "required": [
        "advanceDepositFlag",
        "groupTemplateFlag",
        "preregPrintedFlag",
        "printCompanyNameAddress"
      ],
      "properties": {
        "advanceDepositFlag": {
          "type": "boolean",
          "description": "The advance deposit flag"
        },
        "folioId": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The id of the folio"
        },
        "folioStatus": {
          "type": "string",
          "description": "The status of the folio"
        },
        "groupTemplateFlag": {
          "type": "boolean",
          "description": "The group template flag"
        },
        "guestId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the guest"
        },
        "houseAcctCheckoutDate": {
          "type": "string",
          "format": "date-time",
          "description": "The house account check-out date"
        },
        "preregPrintedFlag": {
          "type": "boolean",
          "description": "The pre-registration printed flag"
        },
        "printCompanyNameAddress": {
          "type": "boolean",
          "description": "The print company name address flag"
        },
        "receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FolioReceipt"
          },
          "description": "List of receipts"
        },
        "taxExemptInfo": {
          "type": "string",
          "description": "Tax exempt information"
        },
        "taxExemptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of tax exemptions"
        },
        "taxOrCertificateNumber": {
          "type": "string",
          "description": "Tax or certificate number"
        }
      }
    },
    "FolioReceipt": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewFolioReceipt"
        },
        {
          "type": "object",
          "required": [
            "receiptId"
          ],
          "properties": {
            "parts": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "readOnly": true,
              "description": "The list of parts"
            },
            "receiptId": {
              "type": "integer",
              "format": "int32",
              "description": "The id of the receipt"
            }
          }
        }
      ]
    },
    "FrontdeskConfig": {
      "properties": {
        "allowBatchPrintingOfDueoutReceiptsFlag": {
          "type": "boolean"
        },
        "allowBatchPrintingOfGroupMemberReceiptsFlag": {
          "type": "boolean"
        },
        "allowGroupCheckoutFlag": {
          "type": "boolean"
        },
        "allowLostBusinessFlag": {
          "type": "boolean"
        },
        "allowNonHnrsProfUpdFlag": {
          "type": "boolean"
        },
        "allowRcptForGrpShareFlag": {
          "type": "boolean"
        },
        "alwaysEmailCheckOut": {
          "type": "boolean"
        },
        "alwaysPrintCkoutRcptFlag": {
          "type": "boolean"
        },
        "alwaysPrintPreRegFlag": {
          "type": "boolean"
        },
        "autoRegcardPrintFlag": {
          "type": "boolean"
        },
        "blindDropFlag": {
          "type": "boolean"
        },
        "chargeNoshowMultidayFlag": {
          "type": "boolean"
        },
        "currencyChangeMessage": {
          "type": "string"
        },
        "defCurrencyChangeMessage": {
          "type": "string"
        },
        "defSellingStrategyMessage": {
          "type": "string"
        },
        "defaultFdPostingViewPageSize": {
          "type": "integer",
          "format": "int32"
        },
        "displayNamesOnGlsFlag": {
          "type": "boolean"
        },
        "enableADAFlag": {
          "type": "boolean"
        },
        "internationalFlag": {
          "type": "boolean"
        },
        "noshowNotInMktsegRevFlag": {
          "type": "boolean"
        },
        "printFacturaRcptFlag": {
          "type": "boolean"
        },
        "printForAllNamedGuests": {
          "type": "boolean"
        },
        "printOfficialReceiptAfterCheckout": {
          "type": "boolean"
        },
        "printOfficialReceiptAfterSettlement": {
          "type": "boolean"
        },
        "rmAllowNotInMktsegRevFlag": {
          "type": "boolean"
        },
        "sellingStrategyMessage": {
          "type": "string"
        },
        "showNonrmChargesFlag": {
          "type": "boolean"
        },
        "showPrintFacturaOptionFlag": {
          "type": "boolean"
        },
        "taxExemptReasonRequiredFlag": {
          "type": "boolean"
        },
        "traceFollowupTime": {
          "type": "integer",
          "format": "int32"
        },
        "trackCheckoutByTypeFlag": {
          "type": "boolean"
        },
        "useGeneralAvailFlag": {
          "type": "boolean"
        },
        "useGroupBatchPaymentFlag": {
          "type": "boolean"
        },
        "useGroupBillFeatureFlag": {
          "type": "boolean"
        },
        "useInvoiceReversalFlag": {
          "type": "boolean"
        },
        "usesShiftsFlag": {
          "type": "boolean"
        }
      }
    },
    "GeneralConfig": {
      "properties": {
        "alwaysRollupPackageChargesOnReceiptFlag": {
          "type": "boolean"
        },
        "brandPhoneNumber": {
          "type": "string"
        },
        "brandWebAddress": {
          "type": "string"
        },
        "currRuleBookingTime": {
          "type": "boolean"
        },
        "currRuleCheckinTime": {
          "type": "boolean"
        },
        "currRuleDaily": {
          "type": "boolean"
        },
        "daysToWaitForCrsDownload": {
          "type": "integer",
          "format": "int32"
        },
        "defaultGuestLanguageId": {
          "type": "integer",
          "format": "int32"
        },
        "defaultPrintAlternateNameAndAddressFlag": {
          "type": "boolean"
        },
        "enableDTCMExtractFlag": {
          "type": "boolean"
        },
        "exchangeRate": {
          "type": "number",
          "format": "double"
        },
        "groupSalesExtractFlag": {
          "type": "boolean"
        },
        "hstPurgeMonths": {
          "type": "integer",
          "format": "int32"
        },
        "kioskConfigUrl": {
          "type": "string"
        },
        "lastCrsDefaultDownloadDate": {
          "type": "string",
          "format": "date"
        },
        "multiCrsPropFlag": {
          "type": "boolean"
        },
        "noShowDays": {
          "type": "integer",
          "format": "int32"
        },
        "oaActiveFlag": {
          "type": "boolean"
        },
        "pkgsDistributionConfirmedOptFlag": {
          "type": "boolean"
        },
        "pkgsPostBreakageToOptFlag": {
          "type": "boolean"
        },
        "pkgsPostChargesAtNaOptFlag": {
          "type": "boolean"
        },
        "pointingToHilstarFlag": {
          "type": "boolean"
        },
        "profileUpdateServer": {
          "type": "string"
        },
        "rollupInclusiveTaxOnReceiptFlag": {
          "type": "boolean"
        },
        "roomRevByTravelReasonFlag": {
          "type": "boolean"
        },
        "satisGtdTransEditableFlag": {
          "type": "boolean"
        },
        "usesAlternateNameAndAddressFlag": {
          "type": "boolean"
        },
        "wcfServerTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "??? int assumed"
        }
      }
    },
    "GroupFolio": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Folio"
        }
      ]
    },
    "GroupFolios": {
      "properties": {
        "groupId": {
          "type": "integer",
          "format": "int32",
          "description": "The id of the group to which these folios belong. Only populated for group folios"
        },
        "propCode": {
          "type": "string",
          "description": "The prop code of the property to which these folios belong"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always \"folios\""
        },
        "folios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupFolio"
          }
        }
      }
    },
    "GroupReceipt": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Receipt"
        },
        {
          "type": "object",
          "properties": {
            "groupId": {
              "type": "integer",
              "description": "The id of the group to which these receipts belong"
            }
          }
        }
      ]
    },
    "Groupfields": {
      "required": [
        "propCode",
        "type",
        "itemId"
      ],
      "properties": {
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code associated to the document"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of the document. Always \"conf\"."
        },
        "itemId": {
          "type": "string",
          "pattern": "groupfields",
          "description": "The item identifier of the document. Always 'groupfields'."
        },
        "groupfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegDisplayField"
          }
        }
      }
    },
    "Guaranteetype": {
      "required": [
        "activeFlag",
        "arAcctRequiredFlag",
        "autoCancelFlag",
        "ccRequired",
        "defaultFlag",
        "depositAmtRequiredFlag",
        "gtdWeight",
        "isGuaranteedFlag",
        "gtdCode",
        "resGtdCode",
        "sortOrder",
        "visibleFlag",
        "walkinFlag",
        "gtdCodeDisplay"
      ],
      "properties": {
        "activeFlag": {
          "type": "boolean",
          "description": "The active flag"
        },
        "arAcctRequiredFlag": {
          "type": "boolean",
          "description": "The accounts receivable required flag"
        },
        "autoCancelFlag": {
          "type": "boolean",
          "description": "The auto cancel flag"
        },
        "ccRequired": {
          "type": "boolean",
          "description": "The credit card required flag"
        },
        "defaultFlag": {
          "type": "boolean",
          "description": "The default flag"
        },
        "defaultMOP": {
          "type": "string",
          "description": "The default method of payment"
        },
        "depositAmtRequiredFlag": {
          "type": "boolean",
          "description": "The deposit amount required flag"
        },
        "depositValue": {
          "type": "integer",
          "description": "The deposit value"
        },
        "gtdCode": {
          "type": "string",
          "description": "The guaranteed code"
        },
        "gtdCodeDisplay": {
          "type": "string",
          "maxLength": 6,
          "description": "The guaranteed code display"
        },
        "gtdDesc": {
          "type": "string",
          "description": "The guaranteed description"
        },
        "gtdWeight": {
          "type": "integer",
          "description": "The guaranteed weight"
        },
        "isGuaranteedFlag": {
          "type": "boolean",
          "description": "The guaranteed flag"
        },
        "msaCode": {
          "type": "string",
          "description": "The MSA code - a single character code that represents the guarantee method. Used by downstream systems"
        },
        "resGtdCode": {
          "type": "string",
          "maxLength": 6,
          "description": "The reservation guaranteed code"
        },
        "resGtdDesc": {
          "type": "string",
          "description": "The reservation guaranteed description"
        },
        "sortOrder": {
          "type": "integer",
          "description": "The sort order"
        },
        "visibleFlag": {
          "type": "boolean",
          "description": "The visible flag"
        },
        "walkinFlag": {
          "type": "boolean",
          "description": "The walkin flag"
        }
      }
    },
    "Guaranteetypes": {
      "required": [
        "propCode",
        "itemId",
        "type",
        "locale"
      ],
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the guarantee types"
        },
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The propCode of the guarantee types"
        },
        "itemId": {
          "type": "string",
          "pattern": "guaranteetypes",
          "description": "the item id of the guarantee types"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of the guarantee types"
        },
        "guaranteetypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Guaranteetype"
          }
        }
      }
    },
    "Guestfields": {
      "required": [
        "itemId",
        "propCode",
        "type"
      ],
      "properties": {
        "itemId": {
          "type": "string",
          "pattern": "guestfields",
          "description": "The item id for guest fields. Always \"guestfields\""
        },
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code of the guest fields"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of this document. Always \"conf\""
        },
        "guestfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegDisplayField"
          }
        }
      }
    },
    "Gueststatus": {
      "properties": {
        "statusId": {
          "type": "string",
          "description": "The id for the status"
        },
        "statusDesc": {
          "type": "string",
          "description": "The description of the status"
        }
      }
    },
    "Gueststatuses": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of these guest statuses"
        },
        "type": {
          "type": "string",
          "description": "The type of these guest statuses"
        },
        "itemId": {
          "type": "string",
          "description": "The id of the guest statuses"
        },
        "gueststatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Gueststatus"
          }
        }
      }
    },
    "HhonorsConfig": {
      "properties": {
        "allowHhonorsUpgrade": {
          "type": "boolean"
        },
        "eRCRSDutyCd": {
          "type": "string"
        },
        "eRCRSPassword": {
          "type": "string"
        },
        "eRCRSUseSvcAcct": {
          "type": "boolean"
        },
        "eRCRSUserId": {
          "type": "string"
        },
        "eREnabledFlag": {
          "type": "boolean"
        },
        "eRMultiPropCombineFlag": {
          "type": "boolean"
        },
        "erWcfTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "hhonorsRedemptionArAcctId": {
          "type": "string"
        },
        "hhonorsRedemptionClearingAcctId": {
          "type": "string"
        },
        "hhonorsRedemptionDepositoryPmtAcctId": {
          "type": "string"
        },
        "hhonorsRedemptionUpdateRetries": {
          "type": "integer",
          "format": "int32"
        },
        "hhonorsRedemptionUpdateTimeout": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HotelConfig": {
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "allowDayUseResvsFlag": {
          "type": "boolean"
        },
        "autoNonrateRoomHandlingFlag": {
          "type": "boolean"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "curBusDate": {
          "type": "string",
          "format": "date"
        },
        "currencyCode": {
          "type": "string"
        },
        "daysKeepIneligiblePurgeRecords": {
          "type": "integer",
          "format": "int32"
        },
        "daysToWaitBeforeArchive": {
          "type": "integer",
          "format": "int32"
        },
        "deviceExtnPrefix1": {
          "type": "string"
        },
        "deviceExtnPrefix2": {
          "type": "string"
        },
        "disableTaxDetailLogging": {
          "type": "boolean"
        },
        "fAEPassword": {
          "type": "string"
        },
        "fAEUser": {
          "type": "string"
        },
        "facilityId": {
          "type": "integer",
          "format": "int32"
        },
        "faxNum": {
          "type": "string"
        },
        "folioArchiveDaysToKeepArchiveRecords": {
          "type": "integer",
          "format": "int32"
        },
        "folioArchiveReport": {
          "type": "string"
        },
        "huanyingProgram": {
          "type": "boolean"
        },
        "includeNoshowInOccFlag": {
          "type": "boolean"
        },
        "phoneNum": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "propertyName": {
          "type": "string"
        },
        "rotateCondoRule": {
          "type": "string"
        },
        "rotateHotelRule": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "subBrandCode": {
          "type": "string"
        },
        "systemTaxAcct": {
          "type": "string"
        },
        "taxOnGuestType": {
          "type": "boolean"
        },
        "trainBRequestedFlag": {
          "type": "boolean"
        },
        "trainProfileUpdateServer": {
          "type": "string"
        },
        "useCondoFlag": {
          "type": "boolean"
        },
        "usePremiumFlag": {
          "type": "boolean"
        },
        "useTrainbOnUpdatesFlag": {
          "type": "boolean"
        }
      }
    },
    "HousekeepingConfig": {
      "properties": {
        "defaultBuildingId": {
          "type": "integer",
          "format": "int32"
        },
        "defaultCompoundId": {
          "type": "integer",
          "format": "int32"
        },
        "hskAutomatedAssignmentFlag": {
          "type": "boolean"
        },
        "hskCleanSupportedFlag": {
          "type": "boolean"
        },
        "hskCreditsSupportedFlag": {
          "type": "boolean"
        },
        "hskDailyMessage": {
          "type": "string"
        },
        "hskDisplayGuestNameFlag": {
          "type": "boolean"
        },
        "hskLinensChangedFrequency": {
          "type": "integer",
          "format": "int32"
        },
        "hskPickupSupportedFlag": {
          "type": "boolean"
        },
        "hskWeekBegin": {
          "type": "string"
        },
        "lnfPurgeDays": {
          "type": "integer",
          "format": "int32"
        },
        "useStandardHousekeepingFlag": {
          "type": "boolean"
        },
        "usesBuildingsFlag": {
          "type": "boolean"
        },
        "usesCompoundsFlag": {
          "type": "boolean"
        }
      }
    },
    "Linkedprop": {
      "required": [
        "propCode",
        "activeFlag",
        "mainFlag"
      ],
      "properties": {
        "activeFlag": {
          "type": "boolean",
          "description": "The active flag"
        },
        "mainFlag": {
          "type": "boolean",
          "description": "The main flag"
        },
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code of the linked property"
        }
      }
    },
    "Linkedprops": {
      "required": [
        "propCode",
        "itemId",
        "type"
      ],
      "properties": {
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The ID (property code) for this config"
        },
        "itemId": {
          "type": "string",
          "pattern": "linkedprops",
          "description": "The item ID for this document. Always \"linkedprops\""
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of this document. Always \"conf\""
        },
        "linkedprops": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Linkedprop"
          }
        }
      }
    },
    "Locale": {
      "required": [
        "id",
        "localName",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The locale id (e.g. 'sp-SP')"
        },
        "name": {
          "type": "string",
          "description": "The name of this locale (e.g. 'Spanish')"
        },
        "localName": {
          "type": "string",
          "description": "The in-language name of this locale (e.g. 'Español')"
        }
      }
    },
    "Locales": {
      "required": [
        "propCode",
        "type",
        "itemId"
      ],
      "properties": {
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code associated to the document"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of the document. Always \"conf\"."
        },
        "itemId": {
          "type": "string",
          "pattern": "locales",
          "description": "The item identifier of the document"
        },
        "locales": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Locale"
          }
        }
      }
    },
    "Messages": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "description": "the item ID this message is associated with"
        },
        "locale": {
          "type": "string",
          "description": "the locale for these messages"
        },
        "type": {
          "type": "string",
          "description": "The type of document being returned. Always \"messages\"."
        },
        "messages": {
          "type": "object",
          "description": "The key value map of messages",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Mop": {
      "properties": {
        "mopDesc": {
          "type": "string",
          "description": "The mop description"
        },
        "mopType": {
          "type": "string",
          "description": "The type of this mop"
        }
      }
    },
    "Mops": {
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The item id of the mops"
        },
        "locale": {
          "type": "string",
          "description": "The locale of the mops"
        },
        "type": {
          "type": "string",
          "description": "The type of the mops"
        },
        "mops": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Mop"
          }
        }
      }
    },
    "Name": {
      "required": [
        "first",
        "last"
      ],
      "properties": {
        "first": {
          "type": "string",
          "description": "The first name"
        },
        "last": {
          "type": "string",
          "description": "The last name"
        },
        "middle": {
          "type": "string",
          "description": "The middle name"
        },
        "title": {
          "type": "string",
          "description": "The title"
        }
      }
    },
    "NewFolioReceipt": {
      "required": [
        "allowInterfacePostFlag",
        "cardReaderUsedFlag",
        "confidentialFlag",
        "mopType"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "allowInterfacePostFlag": {
          "type": "boolean",
          "description": "The allow interface post flag"
        },
        "arAcctId": {
          "type": "integer",
          "format": "int32",
          "description": "The accounts receivable id"
        },
        "cardReaderUsedFlag": {
          "type": "boolean",
          "description": "The card reader used flag"
        },
        "chargecategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargeCategory"
          }
        },
        "checkNumber": {
          "type": "integer",
          "format": "int32",
          "description": "The check number"
        },
        "comments": {
          "type": "string",
          "description": "Comments on the receipt"
        },
        "companyName": {
          "type": "string",
          "description": "The company name"
        },
        "confidentialFlag": {
          "type": "boolean",
          "description": "The confidential flag"
        },
        "creditCard": {
          "$ref": "#/definitions/CreditCard"
        },
        "creditLimit": {
          "type": "number",
          "format": "double",
          "description": "The credit limit"
        },
        "depositoryAccountingId": {
          "type": "string",
          "description": "The depository accounting id"
        },
        "depositoryPaymentInfo": {
          "type": "string",
          "description": "The depository payment info"
        },
        "division": {
          "type": "string",
          "description": "The division"
        },
        "mopType": {
          "type": "string",
          "description": "The method of payment type"
        },
        "postingCodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The posting codes"
        }
      }
    },
    "Noshowstatus": {
      "properties": {
        "statusId": {
          "type": "string",
          "description": "The id for the noshow status"
        },
        "statusDesc": {
          "type": "string",
          "description": "The description of the noshow status"
        }
      }
    },
    "Noshowstatuses": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the noshow statuses"
        },
        "type": {
          "type": "string",
          "description": "The type of the noshow statuses"
        },
        "itemId": {
          "type": "string",
          "description": "The id of the noshow statuses"
        },
        "noshowstatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Noshowstatus"
          }
        }
      }
    },
    "Notification": {
      "required": [
        "activeFlag",
        "msgId",
        "msgType"
      ],
      "properties": {
        "activeFlag": {
          "type": "boolean",
          "description": "Indicates if this notification is active"
        },
        "msgId": {
          "type": "integer",
          "description": "The message Id of this notification"
        },
        "msgType": {
          "type": "string",
          "description": "The message type of this notification"
        },
        "message": {
          "type": "string",
          "description": "The message of this notification"
        }
      }
    },
    "Notifications": {
      "required": [
        "itemId",
        "locale",
        "propCode",
        "type"
      ],
      "properties": {
        "locale": {
          "type": "string",
          "description": "Indicates the language of the notifications"
        },
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The propCode of the notifications"
        },
        "itemId": {
          "type": "string",
          "pattern": "notifications",
          "description": "The itemId of the notifications. Always \"notifications\""
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of the notifications. Always \"conf\""
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notification"
          }
        }
      }
    },
    "Notificationtype": {
      "properties": {
        "typeId": {
          "type": "string",
          "description": "The id for notification type"
        },
        "typeDesc": {
          "type": "string",
          "description": "The description for the notification type"
        }
      }
    },
    "Notificationtypes": {
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The item ID for this document. Always \"notificationtypes\""
        },
        "locale": {
          "type": "string",
          "description": "Indicates the language of the notification type descriptions"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always \"conf\""
        },
        "notificationtypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notificationtype"
          }
        }
      }
    },
    "PmsConfig": {
      "required": [
        "propCode",
        "type"
      ],
      "type": "object",
      "properties": {
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The ID (property code) for this config"
        },
        "type": {
          "type": "string",
          "pattern": "conf"
        },
        "account": {
          "$ref": "#/definitions/AccountConfig"
        },
        "acctsrecv": {
          "$ref": "#/definitions/AccountsReceivableConfig"
        },
        "admin": {
          "$ref": "#/definitions/AdminConfig"
        },
        "frontdesk": {
          "$ref": "#/definitions/FrontdeskConfig"
        },
        "general": {
          "$ref": "#/definitions/GeneralConfig"
        },
        "hhonors": {
          "$ref": "#/definitions/HhonorsConfig"
        },
        "hotel": {
          "$ref": "#/definitions/HotelConfig"
        },
        "housekeeping": {
          "$ref": "#/definitions/HousekeepingConfig"
        },
        "posting": {
          "$ref": "#/definitions/PostingConfig"
        },
        "reports": {
          "$ref": "#/definitions/ReportsConfig"
        },
        "security": {
          "$ref": "#/definitions/SecurityConfig"
        }
      }
    },
    "PostingCodes": {
      "required": [
        "propCode",
        "type",
        "locale"
      ],
      "properties": {
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code of the property to which these posting codes belong"
        },
        "type": {
          "type": "string",
          "pattern": "postingcodes",
          "description": "The type of this document. Always \"postingcodes\""
        },
        "locale": {
          "type": "string",
          "description": "The locale of these posting codes"
        },
        "postingcodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Postingcode"
          }
        }
      }
    },
    "PostingConfig": {
      "properties": {
        "advanceDepositCreditAccountingId": {
          "type": "string"
        },
        "advanceDepositDebitAccountingId": {
          "type": "string"
        },
        "allowAdjPastDatedTxnsFlag": {
          "type": "boolean"
        },
        "batchChargeRetainDays": {
          "type": "integer",
          "format": "int32"
        },
        "batchSettleFlag": {
          "type": "boolean"
        },
        "batchSettleThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "ccPrvntMgrPmtAdjFlag": {
          "type": "boolean"
        },
        "commonOutletId": {
          "type": "integer",
          "format": "int32"
        },
        "crossSellUrl": {
          "type": "string"
        },
        "cxlAsMiscFlag": {
          "type": "boolean"
        },
        "explanationLimit": {
          "type": "integer",
          "format": "int32"
        },
        "fdStatusResetFlag": {
          "type": "boolean"
        },
        "gtdNoshowAccountId": {
          "type": "string"
        },
        "gtdNoshowAsMiscFlag": {
          "type": "boolean"
        },
        "gtdNoshowRevGlAccountId": {
          "type": "integer",
          "format": "int32"
        },
        "maxRefundAmount": {
          "type": "integer",
          "format": "int64"
        },
        "paidOutVoucherPrintCopies": {
          "type": "integer",
          "format": "int32"
        },
        "postAdvanceDepositVATFlag": {
          "type": "boolean"
        },
        "printOfficialSummarizedReceiptFlag": {
          "type": "boolean"
        },
        "prtRcptOnSettleFlag": {
          "type": "boolean"
        },
        "realtimeSettlementFlag": {
          "type": "boolean"
        },
        "taxExemptPolicy": {
          "type": "string"
        },
        "tierType1": {
          "type": "string"
        },
        "topupFlag": {
          "type": "boolean"
        },
        "useHomeGlMappingFlag": {
          "type": "boolean"
        },
        "vatHouseAcctId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Postingcode": {
      "required": [
        "accountingStatusFlag",
        "autoPostFlag",
        "availableOnFrontdesk",
        "categoryId",
        "ccAsCashDepFlag",
        "guestBasedFlag",
        "modifyFlag",
        "nonRmPkgFlag",
        "onlyUsedInArFlag",
        "postCashReceipt",
        "postingCode",
        "postingCodeDesc",
        "receiptBreakoutFlag",
        "receivableFlag",
        "roomAndTaxFlag",
        "stayTiers",
        "stopCharge",
        "sumDs",
        "sumFlag",
        "systemAcctFlag",
        "systemPackageAcctFlag",
        "vouchPrintFlag",
        "vouchRequiredFlag"
      ],
      "properties": {
        "accessType": {
          "type": "string",
          "description": "The access type"
        },
        "accountingStatusFlag": {
          "type": "boolean",
          "description": "The accounting status flag"
        },
        "allowanceAccountingId": {
          "type": "string",
          "description": "The allowance accounting id"
        },
        "autoPostFlag": {
          "type": "boolean",
          "description": "The auto post flag"
        },
        "availableOnFrontdesk": {
          "type": "boolean",
          "description": "Available on Front Desk"
        },
        "categoryId": {
          "type": "string",
          "description": "The category id"
        },
        "ccAsCashDepFlag": {
          "type": "boolean",
          "description": "The credit card as cash deposit flag"
        },
        "chargeDept": {
          "type": "string",
          "description": "The charge department"
        },
        "chargeType": {
          "type": "string",
          "description": "The charge type"
        },
        "commonAcctIdentifier": {
          "type": "string",
          "description": "The common account identifier"
        },
        "defaultAmount": {
          "type": "number",
          "format": "double",
          "description": "The default amount"
        },
        "defaultAmountCurrencyCode": {
          "type": "string",
          "description": "The default amount currency code"
        },
        "facilityId": {
          "type": "integer",
          "description": "The facility id"
        },
        "glAccountId": {
          "type": "integer",
          "format": "int64",
          "description": "The general ledger account Id"
        },
        "guestBasedFlag": {
          "type": "boolean",
          "description": "The guest based flag"
        },
        "interfaceId": {
          "type": "integer",
          "description": "The interface id"
        },
        "journalToFacilityId": {
          "type": "integer",
          "description": "The journal to facility id"
        },
        "journalToGlAccountId": {
          "type": "integer",
          "description": "The journal to general ledger account id"
        },
        "mktsegType": {
          "type": "string",
          "description": "The market segment type"
        },
        "modifyFlag": {
          "type": "boolean",
          "description": "The modify flag"
        },
        "nonRmPkgFlag": {
          "type": "boolean",
          "description": "The non-room package flag"
        },
        "onlyUsedInArFlag": {
          "type": "boolean",
          "description": "The only used in accounts receivable flag"
        },
        "postCashReceipt": {
          "type": "boolean",
          "description": "The post cash receipt"
        },
        "postingCode": {
          "type": "string",
          "description": "The posting code"
        },
        "postingCodeDesc": {
          "type": "string",
          "description": "The posting code description"
        },
        "receiptBreakoutFlag": {
          "type": "boolean",
          "description": "The receipt breakout flag"
        },
        "receivableFlag": {
          "type": "boolean",
          "description": "The receivable flag"
        },
        "rmrevExemptAcctStatus": {
          "type": "string",
          "description": "The room revenue exempt account status"
        },
        "roomAndTaxFlag": {
          "type": "boolean",
          "description": "The room and tax flag"
        },
        "stayTiers": {
          "type": "boolean",
          "description": "The stay tiers"
        },
        "stopCharge": {
          "type": "boolean",
          "description": "The stop charge"
        },
        "stopChargemopsList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The stop charge means of payment list"
        },
        "sumDs": {
          "type": "boolean",
          "description": "The sum ds"
        },
        "sumFlag": {
          "type": "boolean",
          "description": "The flag to summarize multiple postings into one line"
        },
        "systemAcctFlag": {
          "type": "boolean",
          "description": "The system account flag"
        },
        "systemPackageAcctFlag": {
          "type": "boolean",
          "description": "The system package account flag"
        },
        "taxAssign": {
          "type": "string",
          "description": "The tax assignment"
        },
        "travelReasonCode": {
          "type": "string",
          "description": "The travel reason code"
        },
        "vouchPrintFlag": {
          "type": "boolean",
          "description": "The voucher print flag"
        },
        "vouchRequiredFlag": {
          "type": "boolean",
          "description": "The voucher required flag"
        }
      }
    },
    "Prop": {
      "type": "object",
      "properties": {
        "propCode": {
          "type": "string",
          "description": "Property Code",
          "pattern": "^[A-Z]{4,5}$"
        },
        "distributionBrand": {
          "type": "string",
          "description": "Distribution Brand Code",
          "pattern": "^[A-Z]{2}$"
        },
        "ctyhocn": {
          "type": "string",
          "description": "Property CTYHOCN",
          "pattern": "^[A-Z]{6,7}$"
        },
        "name": {
          "type": "string",
          "description": "Property Name"
        },
        "totalRooms": {
          "type": "integer",
          "description": "Total Room Inventory at Property"
        },
        "address": {
          "$ref": "#/definitions/PropAddress"
        },
        "localization": {
          "$ref": "#/definitions/PropLocalization"
        },
        "contactinfo": {
          "$ref": "#/definitions/PropContactInfo"
        },
        "bookingparameters": {
          "$ref": "#/definitions/PropBookingParams"
        },
        "capabilities": {
          "$ref": "#/definitions/PropCapabilities"
        }
      }
    },
    "PropAddress": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string",
          "description": "Property Address Line 1"
        },
        "addressLine2": {
          "type": "string",
          "description": "Property Address Line 2"
        },
        "addressLine3": {
          "type": "string",
          "description": "Property Address Line 3"
        },
        "addressLine4": {
          "type": "string",
          "description": "Property Address Line 4"
        },
        "city": {
          "type": "string",
          "description": "Property City"
        },
        "state": {
          "type": "string",
          "description": "Property State"
        },
        "country": {
          "type": "string",
          "description": "Property Country (ISO 3166-1)"
        },
        "postalCode": {
          "type": "string",
          "description": "Property State/Province (ISO 3166-2)"
        }
      }
    },
    "PropBookingParams": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Property Status (O)pen, (S)easonal Closure, (T)emporarily Removed, (U)nder Construction"
        },
        "rewardCategory": {
          "type": "integer",
          "description": "HHonors Reward Category"
        }
      }
    },
    "PropCapabilities": {
      "type": "object",
      "properties": {
        "digitalCheckIn": {
          "type": "boolean",
          "description": "Digital CheckIn Enabled"
        },
        "digitalKey": {
          "type": "boolean",
          "description": "Digital Key Enabled"
        }
      }
    },
    "PropContactInfo": {
      "type": "object",
      "properties": {
        "emailAddress1": {
          "type": "string",
          "description": "Property Contact Email Address 1",
          "x-customvalidator": "email"
        },
        "emailAddress2": {
          "type": "string",
          "description": "Property Contact Email Address 2",
          "x-customvalidator": "email"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Property Phone Number"
        },
        "phoneExtension": {
          "type": "string",
          "description": "Phone Extension"
        },
        "faxNumber": {
          "type": "string",
          "description": "Property Fax Number"
        }
      }
    },
    "PropLocalization": {
      "type": "object",
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "GMT Offset of Property"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "minimum": -90,
          "maximum": 90,
          "description": "Marketing Latitude of Property"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "minimum": -180,
          "maximum": 180,
          "description": "Marketing Longitude of Property"
        },
        "currency": {
          "type": "string",
          "description": "Property Default Currency"
        }
      }
    },
    "Rateplangroup": {
      "required": [
        "rateplanId",
        "rateplanType"
      ],
      "properties": {
        "rateplanId": {
          "type": "string",
          "maxLength": 6,
          "description": "The rate plan id"
        },
        "rateplanType": {
          "type": "string",
          "description": "The type of Rate plan DU | HS | CP"
        }
      }
    },
    "Rateplangroupdesc": {
      "properties": {
        "rateplanType": {
          "type": "string",
          "description": "The type of the rate plan group"
        },
        "rateplanTypeDesc": {
          "type": "string",
          "description": "The description of the rate plan group"
        }
      }
    },
    "Rateplangroupdescs": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the rate plan group"
        },
        "type": {
          "type": "string",
          "description": "The type of the rate plan group"
        },
        "itemId": {
          "type": "string",
          "description": "The item id of the rate plan group"
        },
        "rateplangroupdescs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rateplangroupdesc"
          }
        }
      }
    },
    "Rateplangroups": {
      "required": [
        "propCode",
        "type",
        "itemId"
      ],
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the comp codes"
        },
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The ID (property code) for this config"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of the rate plan groups"
        },
        "itemId": {
          "type": "string",
          "pattern": "rateplangroups",
          "description": "The item id of the rate plan group"
        },
        "rateplangroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rateplangroup"
          },
          "description": "The list of rate plans"
        }
      }
    },
    "Receipt": {
      "properties": {
        "charges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Charge"
          }
        },
        "folioId": {
          "type": "integer",
          "format": "int32",
          "description": "The id of the folio"
        },
        "propCode": {
          "type": "string",
          "description": "The property code of the property to which these receipts belong"
        },
        "receiptId": {
          "type": "integer",
          "description": "The id of the receipt"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always \"receipts\""
        }
      }
    },
    "RegDisplayField": {
      "required": [
        "fieldId",
        "sortOrder"
      ],
      "properties": {
        "fieldId": {
          "type": "integer",
          "description": "The field Id"
        },
        "sortOrder": {
          "type": "integer",
          "description": "The sort order of the field"
        }
      }
    },
    "Regcardfields": {
      "required": [
        "itemId",
        "propCode",
        "type"
      ],
      "properties": {
        "itemId": {
          "type": "string",
          "pattern": "regcardfields",
          "description": "The item id for registration card fields. Always \"regcardfields\""
        },
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code for the registration card fields"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of this document. Always \"conf\""
        },
        "regcardfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegDisplayField"
          }
        }
      }
    },
    "Registrationfield": {
      "required": [
        "activeFlag",
        "fieldDesc",
        "fieldId",
        "printOnFolioFlag",
        "protectedFlag",
        "requiredByGuarantorFlag",
        "requiredFlag"
      ],
      "properties": {
        "activeFlag": {
          "type": "boolean",
          "description": "Indicates if this registration field is active"
        },
        "comboDesc": {
          "type": "string",
          "description": "The combo description"
        },
        "comboId": {
          "type": "string",
          "description": "The combo Id"
        },
        "comboProc": {
          "type": "string",
          "description": "The combo proc"
        },
        "control": {
          "type": "integer",
          "description": "The number for control"
        },
        "defaultValue": {
          "type": "string",
          "description": "The default value for registration field"
        },
        "fieldDesc": {
          "type": "string",
          "description": "The field description for registration"
        },
        "fieldId": {
          "type": "integer",
          "description": "The field Id of registration"
        },
        "formatMask": {
          "type": "string",
          "description": "The format mask"
        },
        "itemTypecode": {
          "type": "string",
          "description": "Indicates type code for a item"
        },
        "languageId": {
          "type": "integer",
          "description": "The id for language"
        },
        "length": {
          "type": "integer",
          "description": "The length of the registration field"
        },
        "printCaption": {
          "type": "string",
          "description": "The print caption for this registration field"
        },
        "printOnFolioFlag": {
          "type": "boolean",
          "description": "Indicates whether this field should be printed on the folio"
        },
        "protectedFlag": {
          "type": "boolean",
          "description": "Indicates whether the registration field is protected or not"
        },
        "requiredByGuarantorFlag": {
          "type": "boolean",
          "description": "Indicates if this field is required by the guarantor"
        },
        "requiredFlag": {
          "type": "boolean",
          "description": "Indicates whether the field is required or not"
        },
        "type": {
          "type": "integer",
          "description": "The type of the registration field"
        },
        "uiCaption": {
          "type": "string",
          "description": "The UI caption for this registration field"
        }
      }
    },
    "Registrationfields": {
      "required": [
        "propCode",
        "itemId",
        "locale",
        "type"
      ],
      "properties": {
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The ID (property code) for this config"
        },
        "itemId": {
          "type": "string",
          "pattern": "registrationfields",
          "description": "The item ID for this document. Always \"registrationfields\""
        },
        "locale": {
          "type": "string",
          "description": "Indicates the language of the registration fields' displayable text"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of the document. Always \"conf\""
        },
        "registrationfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Registrationfield"
          }
        }
      }
    },
    "Reportfields": {
      "required": [
        "itemId",
        "propCode",
        "type"
      ],
      "properties": {
        "itemId": {
          "type": "string",
          "pattern": "reportfields",
          "description": "The item id for report fields. Always \"reportfields\""
        },
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code of the report fields"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of this document. Always \"conf\""
        },
        "reportfields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegDisplayField"
          }
        }
      }
    },
    "ReportsConfig": {
      "properties": {
        "alwaysZipOut": {
          "type": "boolean"
        },
        "automatedEmailAddress": {
          "type": "string"
        },
        "collateInvoices": {
          "type": "boolean"
        },
        "dbCheckoutReceiptMsgText": {
          "type": "string"
        },
        "doNotReprintPostingsOnOfficialReceiptsFlag": {
          "type": "boolean"
        },
        "duplicateReceiptsLabelText": {
          "type": "string"
        },
        "eFGEnabledFlag": {
          "type": "boolean"
        },
        "eFacturaFlag": {
          "type": "boolean"
        },
        "eformsEnabledFlag": {
          "type": "boolean"
        },
        "electronicFacturaExtractPath": {
          "type": "string"
        },
        "emailServerFlag": {
          "type": "boolean"
        },
        "emailZipoutFlag": {
          "type": "boolean"
        },
        "enableExport": {
          "type": "boolean"
        },
        "enableLanguageDropdownForFactura": {
          "type": "boolean"
        },
        "excludeTaxIdsFromRegistroReport": {
          "type": "boolean"
        },
        "fiscalCode": {
          "type": "string"
        },
        "folioFormat": {
          "type": "integer",
          "format": "int32"
        },
        "homewoodKeyPacketFlag": {
          "type": "boolean"
        },
        "imageLogoPath": {
          "type": "string"
        },
        "includeDirectBillNumberOnAllReceiptsFlag": {
          "type": "boolean"
        },
        "includeLabelDuplicateReceiptsFlag": {
          "type": "boolean"
        },
        "includeLabelInformationBillsFlag": {
          "type": "boolean"
        },
        "includeLabelOfficialReceiptsFlag": {
          "type": "boolean"
        },
        "includeVatRegistrationNumOnAllReceiptsFlag": {
          "type": "boolean"
        },
        "includeVatSummaryOnDuplicateReceiptsFlag": {
          "type": "boolean"
        },
        "includeVatSummaryOnInformationBillsFlag": {
          "type": "boolean"
        },
        "includeVatSummaryOnOfficialReceiptsFlag": {
          "type": "boolean"
        },
        "informationBillsLabelText": {
          "type": "string"
        },
        "lastFolioBillPrintInvoiceNum": {
          "type": "integer",
          "format": "int32"
        },
        "legalPrinterName": {
          "type": "string"
        },
        "numOfCheckoutRcptsLegal": {
          "type": "integer",
          "format": "int32"
        },
        "numOfCheckoutRcptsWrkst": {
          "type": "integer",
          "format": "int32"
        },
        "numOfInvoiceDuplicates": {
          "type": "integer",
          "format": "int32"
        },
        "occupSurveyReportDayCount": {
          "type": "integer",
          "format": "int32"
        },
        "occupancyBasedOnBusdateFlag": {
          "type": "boolean"
        },
        "officialReceiptsLabelText": {
          "type": "string"
        },
        "operatingLanguageId": {
          "type": "integer",
          "format": "int32"
        },
        "overrideReceiptFormat": {
          "type": "string"
        },
        "printDuplicatesWithInvoice": {
          "type": "boolean"
        },
        "printOfficialReceipts": {
          "type": "boolean"
        },
        "printPhoneNumFlag": {
          "type": "boolean"
        },
        "printPropAddrOnReceiptFlag": {
          "type": "boolean"
        },
        "printStaySummaryRcptFlag": {
          "type": "boolean"
        },
        "printUniqueInvoiceNumOnOfficialReceiptsFlag": {
          "type": "boolean"
        },
        "prnCcVchFlag": {
          "type": "boolean"
        },
        "prtExpRptSumOnGstrcptFlag": {
          "type": "boolean"
        },
        "saveInformationFromLeavingCountry": {
          "type": "boolean"
        },
        "sepNonroomTaxFlag": {
          "type": "boolean"
        },
        "sepRmTaxFlag": {
          "type": "boolean"
        },
        "summarizePosOnReceiptFlag": {
          "type": "boolean"
        },
        "useAutoSumIndFroReport": {
          "type": "boolean"
        },
        "useCondoFlag": {
          "type": "boolean"
        },
        "useKeyPacketFlag": {
          "type": "boolean"
        },
        "useLegalPrinterAssignmentForCheckoutReceiptFlag": {
          "type": "boolean"
        },
        "usePrePrintedInvoiceNumbersFlag": {
          "type": "boolean"
        },
        "useSettlementReversalFlag": {
          "type": "boolean"
        },
        "useTacReportWithCommission": {
          "type": "boolean"
        },
        "useWorkstationPrinterAssignmentForCheckoutReceiptFlag": {
          "type": "boolean"
        },
        "usesCorporateTaxIdFlag": {
          "type": "boolean"
        },
        "vatRegistrationNum": {
          "type": "string"
        },
        "weekEnding": {
          "type": "string"
        }
      }
    },
    "Requestcode": {
      "required": [
        "activeFlag",
        "centralRequestFlag",
        "doNotMoveFlag",
        "housekeepingRequestFlag",
        "profilePrefFlag",
        "requestCode",
        "requestCodeType",
        "roomFeatureFlag",
        "requestCodeDesc"
      ],
      "properties": {
        "activeFlag": {
          "type": "boolean",
          "description": "Determines if this request code is active"
        },
        "centralRequestFlag": {
          "type": "boolean",
          "description": "The central request flag of the request code"
        },
        "doNotMoveFlag": {
          "type": "boolean",
          "description": "The do not move flag of the request code"
        },
        "housekeepingRequestFlag": {
          "type": "boolean",
          "description": "The house keeping flag the request code"
        },
        "profilePrefFlag": {
          "type": "boolean",
          "description": "The profile preference flag the request code"
        },
        "requestCode": {
          "type": "string",
          "maxLength": 4,
          "description": "The request code"
        },
        "requestCodeType": {
          "type": "integer",
          "format": "int32",
          "description": "The type of the request code"
        },
        "requestCodeDesc": {
          "type": "string",
          "description": "The description of the request code"
        },
        "roomAttribute": {
          "type": "string",
          "description": "The room attribute of the request code"
        },
        "roomFeatureFlag": {
          "type": "boolean",
          "description": "The room feature flag the request code"
        }
      }
    },
    "Requestcodes": {
      "required": [
        "propCode",
        "locale",
        "itemId",
        "type"
      ],
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the request codes"
        },
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code of the request codes"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of the request codes"
        },
        "itemId": {
          "type": "string",
          "pattern": "requestcodes",
          "description": "The item id of the request codes"
        },
        "requestcodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Requestcode"
          }
        }
      }
    },
    "Requestcodetype": {
      "properties": {
        "requestCodeType": {
          "type": "integer",
          "description": "The type of the request code"
        },
        "requestCodeTypeDesc": {
          "type": "string",
          "description": "The description of the request code"
        }
      }
    },
    "Requestcodetypes": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the request code type"
        },
        "type": {
          "type": "string",
          "description": "The type of the request code"
        },
        "itemId": {
          "type": "string",
          "description": "The item id of the request code"
        },
        "requestcodetypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Requestcodetype"
          }
        }
      }
    },
    "Roomcategories": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "Indicates the language of the room categories."
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always “conf”."
        },
        "itemId": {
          "type": "string",
          "description": "The itemId of this document. Always “roomcategories”."
        },
        "roomcategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roomcategory"
          }
        }
      }
    },
    "Roomcategory": {
      "properties": {
        "categoryId": {
          "type": "string",
          "description": "The id for the category"
        },
        "categoryDesc": {
          "type": "string",
          "description": "The description of the category"
        }
      }
    },
    "Roomstate": {
      "properties": {
        "stateId": {
          "type": "string",
          "description": "The id of the room state"
        },
        "stateDesc": {
          "type": "string",
          "description": "The description of the room state"
        }
      }
    },
    "Roomstates": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the room states"
        },
        "type": {
          "type": "string",
          "description": "The type of the room states"
        },
        "itemId": {
          "type": "string",
          "description": "The item id of the room states"
        },
        "roomstates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roomstate"
          }
        }
      }
    },
    "Roomstatus": {
      "properties": {
        "statusId": {
          "type": "string",
          "description": "The id for the status"
        },
        "statusDesc": {
          "type": "string",
          "description": "The description of the status"
        }
      }
    },
    "Roomstatuses": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of these room statuses"
        },
        "type": {
          "type": "string",
          "description": "The type of these room statuses"
        },
        "itemId": {
          "type": "string",
          "description": "The id of the room statuses"
        },
        "roomstatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Roomstatus"
          }
        }
      }
    },
    "Satisfactiongtdcode": {
      "properties": {
        "activeFlag": {
          "type": "boolean",
          "description": "Indicates if this guaranteed code is active"
        },
        "gtdCode": {
          "type": "string",
          "description": "The satisfaction guaranteed code"
        },
        "gtdDesc": {
          "type": "string",
          "description": "The satisfaction guaranteed description"
        }
      }
    },
    "Satisfactiongtdcodes": {
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The itemId of this document. Always \"satisfactiongtdcodes\""
        },
        "locale": {
          "type": "string",
          "description": "Indicates the language of the guaranteed code descriptions"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always \"conf\""
        },
        "satisfactiongtdcodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Satisfactiongtdcode"
          }
        }
      }
    },
    "Satisfactiongtdctg": {
      "properties": {
        "gtdCatCode": {
          "type": "string",
          "description": "The guaranteed category code"
        },
        "gtdCatDesc": {
          "type": "string",
          "description": "The guaranteed category description"
        },
        "gtdCodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of guaranteed codes"
        },
        "traceOwner": {
          "type": "string",
          "description": "The trace owner"
        }
      }
    },
    "Satisfactiongtdctgs": {
      "properties": {
        "itemId": {
          "type": "string",
          "description": "The itemId of this document. Always “satisfactiongtdctgs”."
        },
        "locale": {
          "type": "string",
          "description": "Indicates the language of the satisfaction guaranteed category descriptions."
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always “conf”."
        },
        "satisfactiongtdctgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Satisfactiongtdctg"
          }
        }
      }
    },
    "SecurityConfig": {
      "properties": {
        "allowPayWithoutAuthFlag": {
          "type": "boolean"
        },
        "allowanceCcNextdayFlag": {
          "type": "boolean"
        },
        "autoAuthAdvDepCc": {
          "type": "boolean"
        },
        "ccAuthMaxNts": {
          "type": "integer",
          "format": "int32"
        },
        "ccAuthMinRqstPct": {
          "type": "integer",
          "format": "int32"
        },
        "ccAuthPct": {
          "type": "integer",
          "format": "int32"
        },
        "ccAuthWaitSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "ccMinAuthDollarsPerStay": {
          "type": "integer",
          "format": "int32"
        },
        "ccNonroomChargeDollars": {
          "type": "integer",
          "format": "int32"
        },
        "ccRoomtaxAdditionalDollars": {
          "type": "integer",
          "format": "int32"
        },
        "ccSettlementTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "edcEffectiveDate": {
          "type": "string",
          "format": "date"
        },
        "idmEnabledFlag": {
          "type": "boolean"
        },
        "idmPwCoachUrl": {
          "type": "string"
        },
        "idmUrl": {
          "type": "string"
        },
        "maxCashRefund": {
          "type": "integer",
          "format": "int32"
        },
        "overallIdmEnabledFlag": {
          "type": "boolean"
        },
        "useMaxCashRefundFlag": {
          "type": "boolean"
        }
      }
    },
    "StayFolio": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Folio"
        },
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "$ref": "#/definitions/Name"
            }
          }
        }
      ]
    },
    "StayFolios": {
      "properties": {
        "stayId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the stay to which these folios belong. Only populated for stay folios"
        },
        "propCode": {
          "type": "string",
          "description": "The prop code of the property to which these folios belong"
        },
        "type": {
          "type": "string",
          "description": "The type of this document. Always \"folios\""
        },
        "folios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StayFolio"
          }
        }
      }
    },
    "StayReceipt": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Receipt"
        },
        {
          "type": "object",
          "properties": {
            "stayId": {
              "type": "integer",
              "format": "int64",
              "description": "The id of the stay to which these receipts belong"
            }
          }
        }
      ]
    },
    "Staystatus": {
      "properties": {
        "statusId": {
          "type": "string",
          "description": "The id for the stay status"
        },
        "statusDesc": {
          "type": "string",
          "description": "The description of the stay status"
        }
      }
    },
    "Staystatuses": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the stay statuses"
        },
        "type": {
          "type": "string",
          "description": "The type of the stay statuses"
        },
        "itemId": {
          "type": "string",
          "description": "The id of the stay statuses"
        },
        "staystatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Staystatus"
          }
        }
      }
    },
    "Traceowner": {
      "properties": {
        "ownerType": {
          "type": "string",
          "description": "The type of the trace owner"
        },
        "ownerDesc": {
          "type": "string",
          "description": "The description of the trace owner"
        }
      }
    },
    "Traceowners": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the trace owners"
        },
        "type": {
          "type": "string",
          "description": "The type of the trace owners"
        },
        "itemId": {
          "type": "string",
          "description": "The item id of the trace owners"
        },
        "traceowners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Traceowner"
          }
        }
      }
    },
    "Tracestatus": {
      "properties": {
        "statusId": {
          "type": "string",
          "description": "The id of the trace status"
        },
        "statusDesc": {
          "type": "string",
          "description": "The description of the trace status"
        }
      }
    },
    "Tracestatuses": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of the trace statuses"
        },
        "type": {
          "type": "string",
          "description": "The type of the trace statuses"
        },
        "itemId": {
          "type": "string",
          "description": "The item id of the trace statuses"
        },
        "tracestatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tracestatus"
          }
        }
      }
    },
    "Tracetype": {
      "properties": {
        "traceType": {
          "type": "string",
          "description": "The type of the trace"
        },
        "traceDesc": {
          "type": "string",
          "description": "The description of trace type"
        }
      }
    },
    "Tracetypes": {
      "properties": {
        "locale": {
          "type": "string",
          "description": "The locale of trace types"
        },
        "type": {
          "type": "string",
          "description": "The type of the trace types"
        },
        "itemId": {
          "type": "string",
          "description": "The id of the trace types"
        },
        "tracetypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tracetype"
          }
        }
      }
    },
    "Transaction": {
      "properties": {
        "adjustmentFlag": {
          "type": "boolean",
          "description": "The adjustment flag"
        },
        "advDepWhenPostedFlag": {
          "type": "boolean",
          "description": "The advanced deposit when posted flag"
        },
        "busDate": {
          "type": "string",
          "description": "The business date"
        },
        "cardReaderUsedFlag": {
          "type": "boolean",
          "description": "The card reader used flag"
        },
        "chargeType": {
          "type": "string",
          "description": "The charge type"
        },
        "currencyCode": {
          "type": "string",
          "description": "The currency code"
        },
        "edcBatchId": {
          "type": "integer",
          "description": "The electronic data capture batch id. This is for credit card settlement transactions that are transmitted in batch to a credit card processor."
        },
        "employeeShiftBalanceStatus": {
          "type": "string",
          "description": "The employee shift balance status"
        },
        "entryAmount": {
          "type": "number",
          "format": "double",
          "description": "The entry amount"
        },
        "entryId": {
          "type": "integer",
          "description": "The entry id of this transaction"
        },
        "entryRefId": {
          "type": "string",
          "description": "The entry reference id"
        },
        "entryType": {
          "type": "string",
          "description": "The entry type of the transaction"
        },
        "entryTypeFlag": {
          "type": "boolean",
          "description": "The entry type flag"
        },
        "exchangeRate": {
          "type": "number",
          "format": "double",
          "description": "The exchange rate"
        },
        "foodAndBevClearedFlag": {
          "type": "boolean",
          "description": "The food and beverage cleared flag"
        },
        "foreignAmount": {
          "type": "number",
          "format": "double",
          "description": "The foreign amount"
        },
        "guaranteeCode": {
          "type": "string",
          "description": "The guarantee code"
        },
        "hilstarPayBatchId": {
          "type": "integer",
          "description": "The hilstar payment batch id"
        },
        "paymentMethod": {
          "type": "string",
          "description": "The payment method"
        },
        "postedDatetime": {
          "type": "string",
          "description": "The posted date time"
        },
        "postingCode": {
          "type": "string",
          "description": "The posting code"
        },
        "postingTypeCode": {
          "type": "string",
          "description": "The posting type code"
        },
        "transDesc": {
          "type": "string",
          "description": "The transaction description"
        },
        "transferFlag": {
          "type": "boolean",
          "description": "The transfer flag"
        },
        "transferWithinArFlag": {
          "type": "boolean",
          "description": "The transfer within accounts receivable flag"
        },
        "userId": {
          "type": "string",
          "description": "The id of the user"
        },
        "voucherExplanation": {
          "type": "string",
          "description": "The voucher explanation"
        },
        "voucherReasonId": {
          "type": "integer",
          "description": "The voucher reason id"
        }
      }
    },
    "Voucherreason": {
      "required": [
        "entryType",
        "reasonDesc",
        "reasonId"
      ],
      "properties": {
        "entryType": {
          "type": "string",
          "description": "The type of entry of this voucher reason"
        },
        "reasonDesc": {
          "type": "string",
          "description": "The reason description of this voucher reason"
        },
        "reasonId": {
          "type": "integer",
          "description": "The reason Id of this voucher reason"
        }
      }
    },
    "Voucherreasons": {
      "required": [
        "itemId",
        "locale",
        "propCode",
        "type"
      ],
      "properties": {
        "itemId": {
          "type": "string",
          "pattern": "voucherreasons",
          "description": "The item id for voucher reasons. Always \"voucherreasons\""
        },
        "locale": {
          "type": "string",
          "description": "Indicates the language of voucher reasons"
        },
        "propCode": {
          "type": "string",
          "pattern": "^[A-Z]{4,5}$",
          "description": "The property code of the voucher reasons"
        },
        "type": {
          "type": "string",
          "pattern": "conf",
          "description": "The type of this document. Always \"conf\""
        },
        "voucherreasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Voucherreason"
          }
        }
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "accountId": {
      "name": "accountId",
      "in": "path",
      "required": true,
      "description": "The account id",
      "type": "integer",
      "format": "int32"
    },
    "date": {
      "name": "date",
      "in": "path",
      "description": "The date of audit entries",
      "required": true,
      "type": "string",
      "format": "date"
    },
    "folioId": {
      "name": "folioId",
      "in": "path",
      "required": true,
      "description": "The folio id",
      "type": "integer",
      "format": "int32"
    },
    "groupId": {
      "name": "groupId",
      "in": "path",
      "required": true,
      "description": "The group id",
      "type": "integer",
      "format": "int32"
    },
    "propCode": {
      "name": "propCode",
      "in": "path",
      "description": "The property code",
      "required": true,
      "type": "string"
    },
    "receiptId": {
      "name": "receiptId",
      "in": "path",
      "required": true,
      "description": "The receipt id",
      "type": "integer",
      "format": "int32"
    },
    "stayId": {
      "name": "stayId",
      "in": "path",
      "required": true,
      "description": "The stay id",
      "type": "integer",
      "format": "int64"
    }
  },
  "responses": {
    "201": {
      "description": "Created",
      "headers": {
        "Location": {
          "type": "string",
          "description": "Returned on successful creation of a new resource. A link to the newly-created resouce will be contained in the 'Location' header."
        }
      }
    },
    "204": {
      "description": "Success"
    },
    "400": {
      "description": "Bad request",
      "schema": {
        "$ref": "#/definitions/ErrorDetail"
      }
    },
    "404": {
      "description": "Not found"
    },
    "409": {
      "description": "Resource already exists"
    },
    "500": {
      "description": "Internal Server Error"
    }
  }
}
